{"version":3,"sources":["helpers/colours.js","helpers/bubbleChartHover.js","helpers/getFontSize.js","hooks/useChartData.js","hooks/useWindowWidth.js","components/BubbleSizeDropdown.js","components/ChartAndSliderContainer.js","components/ChartPageLayout.js","components/ChartSidebar.js","components/Loading.js","components/Slider.js","components/BubbleChart.js","components/Header.js","components/Home.js","helpers/lineChartHover.js","components/LineChart.js","data/gapminder_clean.csv","helpers/getContinent.js","App.js","index.js","components/ChartSidebar.module.scss","components/Header.module.scss","components/BubbleSizeDropdown.module.scss","components/ChartAndSliderContainer.module.scss","components/ChartPageLayout.module.scss","components/Slider.module.scss","components/Home.module.scss"],"names":["colours","Asia","red","green","blue","Americas","Europe","Africa","Unknown","getColour","continent","alpha","getBubbleBackgroundColour","data","selected","Object","values","indexOf","map","d","label","getBubbleBorderColour","bubbleChartHover","e","chart","radiusScale","setHoverValue","length","value","suffix","log","Math","log10","floor","String","slice","replace","getPrintableValue","element","$context","parsed","_custom","datasets","backgroundColor","c","i","index","borderColor","config","options","plugins","annotation","annotations","line1","type","drawTime","yMin","y","yMax","xMax","x","borderWidth","borderDash","line2","xMin","update","undefined","getTitleFontSize","window","innerWidth","getAxisFontSize","getDatalabelFontSize","useChartData","allData","defaultSelected","useState","setData","allYears","setAllYears","setSelected","useEffect","Set","year","initializeData","newData","reduce","o","a","toggleSelected","country","filterData","func","filteredData","filter","useWindowWidth","width","setWidth","useLayoutEffect","updateWidth","addEventListener","removeEventListener","BubbleSizeDropdown","sizeValue","setSizeValue","hoverValue","name","defaultValue","onChange","target","className","styles","dropdown","ChartAndSliderContainer","children","ChartPageLayout","ChartSidebar","searchValue","setSearchValue","sidebar","src","process","alt","search","placeholder","select","entries","l","id","defaultChecked","onClick","htmlFor","n","toLowerCase","Loading","Slider","listData","min","max","handleChange","slider","list","aria-label","BubbleChart","chartData","radiusCategory","setRadiusCategory","currentYear","setCurrentYear","chartRef","useRef","population","babiesPerWoman","co2","current","bubbleChartData","gdpPercap","lifeExpectancy","r","clip","bubbleChartOptions","aspectRatio","animation","duration","onHover","scales","title","display","text","font","size","family","ticks","tooltip","dataset","dataIndex","callbacks","ctx","bodyFont","displayColors","legend","datalabels","formatter","color","align","anchor","offset","borderRadius","clamp","ref","Header","location","useLocation","header","to","logo","pathname","Home","href","rel","lineChartHover","datasetIndex","pointBackgroundColor","pointBorderColor","LineChart","maxYear","setMaxYear","labels","p","pointBorderWidth","pointRadius","pointHoverRadius","pointHoverBorderWidth","chartOptions","layout","padding","top","right","concat","enabled","mode","context","labelSplit","split","wrappedLabel","join","getContinent","Chart","register","annotationPlugin","ChartDataLabels","App","setAllData","Papa","parse","gapminder","download","complete","results","filtered","Number","isNaN","res","countryName","pop","fertilityRate","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAAaA,EAAU,CACrBC,KAAM,CACJC,IAAK,IACLC,MAAO,GACPC,KAAM,KAERC,SAAU,CACRH,IAAK,IACLC,MAAO,IACPC,KAAM,IAERE,OAAQ,CACNJ,IAAK,IACLC,MAAO,IACPC,KAAM,IAERG,OAAQ,CACNL,IAAK,GACLC,MAAO,IACPC,KAAM,KAERI,QAAS,CACPN,IAAK,EACLC,MAAO,EACPC,KAAM,IAIGK,EAAY,SAACC,GAA0B,IAAfC,EAAc,uDAAN,EAC3C,OAAIX,EAAQU,GACJ,QAAN,OAAeV,EAAQU,GAAWR,IAAlC,aAA0CF,EAAQU,GAAWP,MAA7D,aAAuEH,EAAQU,GAAWN,KAA1F,aAAmGO,EAAnG,KAEK,MAGIC,EAA4B,SAACC,EAAMC,GAC9C,OAA+C,IAA3CC,OAAOC,OAAOF,GAAUG,SAAQ,GAC3BJ,EAAKK,KAAI,SAACC,GAAD,OAAOV,EAAUU,EAAET,UAAW,OAEzCG,EAAKK,KAAI,SAACC,GAAD,OACdL,EAASK,EAAEC,OACPX,EAAUU,EAAET,UAAW,IACvBD,EAAUU,EAAET,UAAW,QAIlBW,EAAwB,SAACR,EAAMC,GAC1C,OAA+C,IAA3CC,OAAOC,OAAOF,GAAUG,SAAQ,GAC3BJ,EAAKK,KAAI,iBAAM,8BAEjBL,EAAKK,KAAI,SAACC,GACf,OAAIL,EAASK,EAAEC,OACN,2BAEF,+BCxBEE,EAAmB,SAC9BC,EACAV,EACAW,EACAC,EACAX,EACAY,GAEIb,EAAKc,QAIPD,EAxCsB,SAACE,GACzB,IAAIC,EACEC,EAAMC,KAAKC,MAAMJ,GACjBL,EAAIQ,KAAKE,MAAMH,EAAM,GAE3B,OAAQP,GACN,KAAK,EACHM,EAAS,GACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IASb,OAHeK,OAAON,EAAK,SAAG,GAAO,EAAIL,IACtCY,MAAM,EAAG,GACTC,QAAQ,MAAO,IACFP,EAgBZQ,CAAkBxB,EAAK,GAAGyB,QAAQC,SAASC,OAAOC,QAAUhB,IAK9DD,EAAMX,KAAK6B,SAAS,GAAGC,gBACrBnB,EAAMX,KAAK6B,SAAS,GAAGC,gBAAgBzB,KAAI,SAAC0B,EAAGC,GAAJ,OACzCA,IAAMhC,EAAK,GAAGiC,MACVF,EAAER,QAAQ,YAAa,MACvBQ,EAAER,QAAQ,gBAAiB,WAInCZ,EAAMX,KAAK6B,SAAS,GAAGK,YAAcvB,EAAMX,KAAK6B,SAAS,GAAG7B,KAAKK,KAC/D,SAACC,EAAG0B,GAAJ,OACEA,IAAMhC,EAAK,GAAGiC,MACV,2BACA,8BAIRtB,EAAMwB,OAAOC,QAAQC,QAAQC,WAAa,CACxCC,YAAa,CACXC,MAAO,CACLC,KAAM,OACNC,SAAU,aACVC,KAAM3C,EAAK,GAAGyB,QAAQC,SAASC,OAAOiB,EACtCC,KAAM7C,EAAK,GAAGyB,QAAQC,SAASC,OAAOiB,EACtCE,KAAM9C,EAAK,GAAGyB,QAAQC,SAASC,OAAOoB,EACtCb,YAAa,qBACbc,YAAa,EACbC,WAAY,CAAC,IAEfC,MAAO,CACLT,KAAM,OACNC,SAAU,aACVS,KAAMnD,EAAK,GAAGyB,QAAQC,SAASC,OAAOoB,EACtCD,KAAM9C,EAAK,GAAGyB,QAAQC,SAASC,OAAOoB,EACtCJ,KAAM,EACNE,KAAM7C,EAAK,GAAGyB,QAAQC,SAASC,OAAOiB,EACtCV,YAAa,qBACbc,YAAa,EACbC,WAAY,CAAC,MAKnBtC,EAAMyC,WAKNvC,EAAc,MAGdF,EAAMX,KAAK6B,SAAS,GAAGC,gBAAkB/B,EACvCY,EAAMX,KAAK6B,SAAS,GAAG7B,KACvBC,GAIFU,EAAMX,KAAK6B,SAAS,GAAGK,YAAc1B,EACnCG,EAAMX,KAAK6B,SAAS,GAAG7B,KACvBC,GAIFU,EAAMwB,OAAOC,QAAQC,QAAQC,gBAAae,EAE1C1C,EAAMyC,WChHGE,EAAmB,WAC9B,OAAIC,OAAOC,WAAa,KACf,GAELD,OAAOC,WAAa,IACf,GAELD,OAAOC,WAAa,IACf,GAEF,IAGIC,EAAkB,WAC7B,OAAIF,OAAOC,WAAa,KACf,GAELD,OAAOC,WAAa,IACf,GAELD,OAAOC,WAAa,IACf,GAEF,IAGIE,EAAuB,WAClC,OAAIH,OAAOC,WAAa,KACf,GAELD,OAAOC,WAAa,IACf,GAEF,I,uBC/BIG,EAAe,SAACC,GAAmC,IAA1BC,EAAyB,uDAAP,GACtD,EAAwBC,mBAASF,GAAjC,mBAAO5D,EAAP,KAAa+D,EAAb,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAgCH,mBAAS,IAAzC,mBAAO7D,EAAP,KAAiBiE,EAAjB,KAGAC,qBAAU,WACRJ,EAAQH,KACP,CAACA,IAGJO,qBAAU,WACJP,GACFK,EAAY,YAAI,IAAIG,IAAIR,EAAQvD,KAAI,SAACC,GAAD,OAAOA,EAAE+D,aAE9C,CAACT,IAGJ,IAAMU,EAAiB,SAACC,GACtBR,EAAQQ,GACRL,EACE,YAAI,IAAIE,IAAIG,EAAQlE,KAAI,SAACC,GAAD,OAAOA,EAAEC,WAASiE,QAAO,SAACC,EAAGC,GAOnD,OANoC,IAAhCb,EAAgBzD,QAAQsE,GAC1BD,EAAEC,IAAK,EAEPD,EAAEC,IAAK,EAGFD,IACN,MAKDE,EAAiB,SAACC,GACtBV,EAAY,2BAAKjE,GAAN,kBAAiB2E,GAAW3E,EAAS2E,OAI5CC,EAAa,SAACC,GAClB,GAAIlB,EAAS,CACX,IAAMmB,EAAenB,EAAQoB,OAAOF,GACpCf,EAAQgB,KAIZ,MAAO,CACL/E,OACAgE,WACA/D,WACA0E,iBACAE,aACAP,mBCpDSW,EAAiB,WAC5B,MAA0BnB,mBAASP,OAAOC,YAA1C,mBAAO0B,EAAP,KAAcC,EAAd,KAeA,OAZAC,2BAAgB,WACd,IAAMC,EAAc,WAClBF,EAAS5B,OAAOC,aAOlB,OAJAD,OAAO+B,iBAAiB,SAAUD,GAClCA,IAGO,kBAAM9B,OAAOgC,oBAAoB,SAAUF,MACjD,IAEIH,G,wBCfIM,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,WAA5B,OAChC,yBACEC,KAAK,OACLC,aAAcJ,EACdK,SAAU,SAACpF,GAAD,OAAOgF,EAAahF,EAAEqF,OAAOhF,QACvCiF,UAAWC,IAAOC,SAJpB,UAME,wBAAQnF,MAAM,aAAd,SACiB,eAAd0E,GAA8BE,EAAaA,EAAa,eAE3D,wBAAQ5E,MAAM,iBAAd,SACiB,mBAAd0E,GAAkCE,EAC/BA,EACA,qBAEN,wBAAQ5E,MAAM,MAAd,SACiB,QAAd0E,GAAuBE,EACpBA,EACA,iC,iBClBGQ,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACrC,yBAASJ,UAAS,2BAAsBC,IAAO,oBAA/C,SACGG,K,iBCFQC,EAAkB,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAH,OAC7B,sBAAMJ,UAAS,+BAA0BC,IAAO,iBAAhD,SACGG,K,iBCFQE,EAAe,SAAC,GAA4C,IAA1CrG,EAAyC,EAAzCA,SAAU0E,EAA+B,EAA/BA,eAAgByB,EAAe,EAAfA,SACvD,EAAsCtC,mBAAS,IAA/C,mBAAOyC,EAAP,KAAoBC,EAApB,KAEA,OACE,0BAASR,UAAS,2BAAsBC,IAAOQ,SAA/C,UACE,qBACEC,IAAG,UAAKC,mCAAL,yBACHC,IAAI,oCACJZ,UAAWC,IAAO5F,MAEpB,uBACEoC,KAAK,OACL1B,MAAOwF,EACPT,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBS,EAAeT,EAAOhF,QAChDiF,UAAWC,IAAOY,OAClBC,YAAY,WAGd,0BAASd,UAAS,4BAAuBC,IAAOc,QAAhD,UACG7G,OAAO8G,QAAQ/G,GAAU+E,QAAO,SAACP,GAAD,OAAgB,IAATA,EAAE,MAAa3D,OAAS,EAC9D,yBACEkF,UAAS,4BAAuBC,IAAO,uBADzC,SAKG/F,OAAO8G,QAAQ/G,GACb+E,QAAO,SAACP,GAAD,OAAgB,IAATA,EAAE,MAChBpE,KAAI,SAACoE,GAAD,OAAOA,EAAE,MACbpE,KAAI,SAAC4G,GAAD,OACH,0BAASjB,UAAWC,IAAO,gBAA3B,UACE,uBACExD,KAAK,WACLyE,GAAID,EACJrB,KAAMqB,EACNE,eAAgBlH,EAASgH,GACzBG,QAAS,kBAAMzC,EAAesC,MAEhC,uBAAOI,QAASJ,EAAhB,SAAoBA,MAR2BA,QAYrD,KAEJ,yBACEjB,UAAS,4BAAuBC,IAAO,yBADzC,SAKmB,KAAhBM,EACGrG,OAAO8G,QAAQ/G,GACZ+E,QAAO,SAACP,GAAD,OAAgB,IAATA,EAAE,MAChBpE,KAAI,SAACoE,GAAD,OAAOA,EAAE,MACbpE,KAAI,SAAC4G,GAAD,OACH,0BAASjB,UAAWC,IAAO,gBAA3B,UACE,uBACExD,KAAK,WACLyE,GAAID,EACJrB,KAAMqB,EACNE,eAAgBlH,EAASgH,GACzBG,QAAS,kBAAMzC,EAAesC,MAEhC,uBAAOI,QAASJ,EAAhB,SAAoBA,MAR2BA,MAWrD/G,OAAO8G,QAAQ/G,GACZ+E,QAAO,SAACP,GAAD,OAAgB,IAATA,EAAE,MAChBpE,KAAI,SAACoE,GAAD,OAAOA,EAAE,MACbO,QACC,SAACsC,GAAD,OAAOA,EAAEC,cAAcV,OAAON,EAAYgB,gBAAkB,KAE7DlH,KAAI,SAAC4G,GAAD,OACH,0BAASjB,UAAWC,IAAO,gBAA3B,UACE,uBACExD,KAAK,WACLyE,GAAID,EACJrB,KAAMqB,EACNE,eAAgBlH,EAASgH,GACzBG,QAAS,kBAAMzC,EAAesC,MAEhC,uBAAOI,QAASJ,EAAhB,SAAoBA,MAR2BA,WAa5Db,MCrFMoB,EAAU,kBAAM,6C,iBCChBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,IAAK7G,EAAvB,EAAuBA,MAAO8G,EAA9B,EAA8BA,aAA9B,OACpB,qCACE,uBACE7B,UAAWC,IAAO6B,OAClBrF,KAAK,QACLkF,IAAKA,EACLC,IAAKA,EACL7G,MAAOA,EACPgH,KAAK,cACLjC,SAAU+B,IAEZ,0BAAUX,GAAG,cAAb,SACGQ,EAASrH,KAAI,SAACC,GAAD,OACZ,wBAAgBS,MAAOT,EAAG0H,aAAY1H,GAAzBA,YCKR2H,EAAc,SAAC,GAAiB,IAAfrE,EAAc,EAAdA,QACtBsE,EAAYvE,EAAaC,GACzBsB,EAAQD,IAEd,EAA4CnB,mBAAS,cAArD,mBAAOqE,EAAP,KAAuBC,EAAvB,KACA,EAAsCtE,mBAAS,MAA/C,mBAAOuE,EAAP,KAAoBC,EAApB,KACA,EAAoCxE,mBAAS,MAA7C,mBAAO6B,EAAP,KAAmB9E,EAAnB,KAEM0H,EAAWC,iBAAO,MAGlB5H,EAAc,CAClB6H,WAAYvD,EAAQ,IAAM,EAAI,KAAW,KACzCwD,eAAgB,EAChBC,IAAK,GAsBP,GAlBAxE,qBAAU,WACJP,GACFsE,EAAU5D,eAAeV,EAAQoB,QAAO,SAAC1E,GAAD,OAAOA,EAAE+D,OAASgE,QAE3D,CAACzE,IAGJO,qBAAU,WACR+D,EAAUrD,YAAW,SAACvE,GAAD,OAAOA,EAAE+D,OAASgE,OACtC,CAACA,IAGJlE,qBAAU,WACJoE,EAASK,SACXL,EAASK,QAAQxF,WAElB,CAAC8B,IAEAgD,EAAUlI,MAAQkI,EAAUjI,SAAU,CAGxC,IAAM4I,EAAkB,CACtBhH,SAAU,CACR,CACEtB,MAAO,aACPP,KAAMkI,EAAUlI,KAAKK,KAAI,SAACC,GAAD,MAAQ,CAC/ByC,EAAGzC,EAAEwI,UACLlG,EAAGtC,EAAEyI,eACLxI,MAAOD,EAAEC,MACTyI,EAAGpI,EAAYuH,GAAkB7H,EAAE6H,GACnCtI,UAAWS,EAAET,cAEfiC,gBAAiB/B,EACfmI,EAAUlI,KACVkI,EAAUjI,UAEZ+C,YAAa,EACbd,YAAa1B,EACX0H,EAAUlI,KACVkI,EAAUjI,UAEZgJ,KAAM,KAKNC,EAAqB,CACzBC,YAAa,EACbC,UAAW,CACTC,SAAU,GAEZC,QAAS,SAAC5I,EAAGV,EAAMW,GAAV,OACPF,EACEC,EACAV,EACAW,EACAC,EAAYuH,GACZD,EAAUjI,SACVY,IAEJuG,QAAS,SAAC1G,EAAGV,EAAMW,GACbX,EAAKc,QACPoH,EAAUvD,eACRhE,EAAMX,KAAK6B,SAAS,GAAG7B,KAAKA,EAAK,GAAGiC,OAAO1B,QAIjDgJ,OAAQ,CACNxG,EAAG,CACDN,KAAM,cACNkF,IAAK,EACLC,IAAK,MACL4B,MAAO,CACLC,SAAS,EACTC,KAAM,iCACNC,KAAM,CACJC,KAAMnG,IACNoG,OAAQ,4BAGZC,MAAO,CACLH,KAAM,CACJE,OAAQ,6BAIdjH,EAAG,CACD+E,IAAK,GACLC,IAAK,GACL4B,MAAO,CACLC,SAAS,EACTC,KAAM,0BACNC,KAAM,CACJC,KAAMnG,IACNoG,OAAQ,4BAGZC,MAAO,CACLH,KAAM,CACJE,OAAQ,8BAKhBxH,QAAS,CACP0H,QAAS,CACP/E,OAAQ,SAACrE,GAEP,IAAQJ,EAAUI,EAAMqJ,QAAQhK,KAAKW,EAAMsJ,WAAnC1J,MACR,OAAQ2H,EAAUjI,SAASM,IAE7B2J,UAAW,CACT3J,MAAO,SAAC4J,GAAD,OAASA,EAAIH,QAAQhK,KAAKmK,EAAIF,WAAW1J,QAElD6J,SAAU,CACRP,OAAQ,0BACRD,KAAMlG,KAER2G,eAAe,GAEjBC,OAAQ,CACNb,SAAS,GAEXD,MAAO,CACLC,SAAS,EACTC,KAAMrB,EACNsB,KAAM,CACJC,KAAMtG,IACNuG,OAAQ,4BAGZU,WAAY,CACVC,UAAW,SAACzJ,GAEV,IAAQR,EAAUQ,EAAVR,MACR,OAAI2H,EAAUjI,SAASM,GACdQ,EAAMR,MAER,MAETkK,MAAO,qBACPC,MAAO,MACPf,KAAM,CACJC,KAAMlG,IACNmG,OAAQ,2BAEVc,OAAQ,MACRC,OAAQ,EACR9I,gBAAiB,qBACjBI,YAAa,qBACb2I,aAAc,EACd7H,YAAa,EACb8H,OAAO,KAKb,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,IAAD,CACE9K,KAAM6I,EACNzG,QAAS8G,EACT6B,IAAKxC,IAEP,cAAC,EAAD,CACEb,SAAUQ,EAAUlE,SACpB2D,IAAI,IACJC,IAAKM,EAAUlE,SAASlD,OAAS,EACjCC,MAAOmH,EAAUlE,SAAS5D,QAAQiI,GAClCR,aAAc,gBAAG9B,EAAH,EAAGA,OAAH,OACZuC,EAAeJ,EAAUlE,SAAS+B,EAAOhF,cAI/C,cAAC,EAAD,CACEd,SAAUiI,EAAUjI,SACpB0E,eAAgBuD,EAAUvD,eAF5B,SAIE,cAAC,EAAD,CACEc,UAAW0C,EACXzC,aAAc0C,EACdzC,WAAYA,SAOtB,OAAO,cAAC,EAAD,K,iBChOIqF,EAAS,WACpB,IAAMC,EAAWC,cAEjB,OACE,yBAAQlF,UAAS,uCAAkCC,IAAOkF,QAA1D,UACE,cAAC,IAAD,CAAMC,GAAE,UAAKzE,mCAAL,KAAR,SACE,oBAAIX,UAAWC,IAAOoF,KAAtB,yBAGF,sBAAKrF,UAAU,KAAf,UACE,cAAC,IAAD,CACEoF,GAAE,UAAKzE,mCAAL,KACFX,UAAS,UAAKC,IAAO,YAAZ,YACPgF,EAASK,WAAT,UAAyB3E,mCAAzB,KAAqDV,IAAO2C,QAAU,MAH1E,kBAQA,cAAC,IAAD,CACEwC,GAAE,UAAKzE,mCAAL,WACFX,UAAS,UAAKC,IAAO,YAAZ,YACPgF,EAASK,WAAT,UAAyB3E,mCAAzB,WAA2DV,IAAO2C,QAAU,MAHhF,oBAQA,cAAC,IAAD,CACEwC,GAAE,UAAKzE,mCAAL,SACFX,UAAS,UAAKC,IAAO,YAAZ,YACPgF,EAASK,WAAT,UAAyB3E,mCAAzB,SAAyDV,IAAO2C,QAAU,MAH9E,yB,iBC1BK2C,EAAO,kBAClB,uBAAMvF,UAAU,YAAhB,UACE,8DAEA,yBAASA,UAAS,mCAA8BC,IAAOyD,MAAvD,SACE,8BACE,mBACE8B,KAAK,6BACLzF,OAAO,SACP0F,IAAI,sBAHN,uBAMK,IAPP,4IAUE,uBACA,uBAXF,6GAauC,cAAC,IAAD,CAAML,GAAE,UAAKzE,mCAAL,WAAR,kBAbvC,IAcE,uBACA,uBAfF,8FAiBoB,cAAC,IAAD,CAAMyE,GAAE,UAAKzE,mCAAL,SAAR,kBAjBpB,IAkBE,gCC3BK+E,EAAiB,SAAChL,EAAGV,EAAMW,GAClCX,EAAKc,QAEPH,EAAMwB,OAAOC,QAAQC,QAAQkI,WAAWzI,gBAAkB,SAACxB,GAAD,OACxDA,EAAEqL,eAAiB3L,EAAK,GAAG2L,aACvB,qBACA,sBAENhL,EAAMwB,OAAOC,QAAQC,QAAQkI,WAAWE,MAAQ,SAACnK,GAAD,OAC9CA,EAAEqL,eAAiB3L,EAAK,GAAG2L,aACvB,yBACA,4BAGNhL,EAAMX,KAAK6B,SAAWlB,EAAMX,KAAK6B,SAASxB,KAAI,SAACC,EAAG0B,GAChD,OAAIA,IAAMhC,EAAK,GAAG2L,aACTrL,EAEF,2BACFA,GADL,IAEE4B,YAAa5B,EAAE4B,YAAYX,QAAQ,WAAY,QAC/CqK,qBAAsBtL,EAAEsL,qBAAqBrK,QAC3C,WACA,QAEFsK,iBAAkB,gCAItBlL,EAAMyC,WAGNzC,EAAMwB,OAAOC,QAAQC,QAAQkI,WAAWzI,gBAAkB,iBACxD,sBAEFnB,EAAMwB,OAAOC,QAAQC,QAAQkI,WAAWE,MAAQ,iBAC9C,0BAGF9J,EAAMX,KAAK6B,SAAWlB,EAAMX,KAAK6B,SAASxB,KAAI,SAACC,GAAD,mBAAC,eAC1CA,GADyC,IAE5C4B,YAAa5B,EAAE4B,YAAYX,QAAQ,QAAS,MAC5CqK,qBAAsBtL,EAAEsL,qBAAqBrK,QAAQ,QAAS,MAC9DsK,iBAAkB,oBAGpBlL,EAAMyC,WC7BG0I,GAAY,SAAC,GAAiB,IAAflI,EAAc,EAAdA,QACpBsE,EAAYvE,EAAaC,EAAS,CAAC,SAAU,YAAa,YAC1DsB,EAAQD,IAEd,EAA8BnB,mBAAS,MAAvC,mBAAOiI,EAAP,KAAgBC,EAAhB,KAEMzD,EAAWC,iBAAO,MAqBxB,GAlBArE,qBAAU,WACJP,GACFsE,EAAU5D,eAAeV,EAAQoB,QAAO,SAAC1E,GAAD,OAAOA,EAAE+D,MAAQ0H,QAE1D,CAACnI,IAGJO,qBAAU,WACR+D,EAAUrD,YAAW,SAACvE,GAAD,OAAOA,EAAE+D,MAAQ0H,OACrC,CAACA,IAGJ5H,qBAAU,WACJoE,EAASK,SACXL,EAASK,QAAQxF,WAElB,CAAC8B,IAEAgD,EAAUlI,MAAQkI,EAAUjI,SAAU,CAGxC,IAAMD,EAAO,CACXiM,OAAQ/D,EAAUlE,SAClBnC,SAAU3B,OAAO8G,QAAQkB,EAAUjI,UAChC+E,QAAO,SAACP,GAAD,OAAgB,IAATA,EAAE,MAChBpE,KAAI,SAACoE,GAAD,OAAOA,EAAE,MACbpE,KAAI,SAAC0B,GAAD,OAAOmG,EAAUlI,KAAKgF,QAAO,SAAC1E,GAAD,OAAOA,EAAEC,QAAUwB,QACpDiD,QAAO,SAACjD,GAAD,OAAOA,EAAEjB,OAAS,KACzBT,KAAI,SAAC0B,GAAD,MAAQ,CACXxB,MAAOwB,EAAE,GAAGxB,MACZP,KAAM+B,EAAE1B,KAAI,SAAC6L,GAAD,MAAQ,CAAEnJ,EAAGmJ,EAAE7H,KAAMzB,EAAGsJ,EAAEpD,cACtC5G,YAAatC,EAAUmC,EAAE,GAAGlC,WAC5BmD,YAAa,EACbmJ,iBAAkB,EAClBP,qBAAsBhM,EAAUmC,EAAE,GAAGlC,WACrCgM,iBAAkB,eAClBO,YAAarK,EAAE1B,KAAI,SAAC6L,GAAD,OAAQA,EAAE7H,OAAS0H,EAAU,EAAI,KACpDM,iBAAkBtK,EAAE1B,KAAI,SAAC6L,GAAD,OAAQA,EAAE7H,OAAS0H,EAAU,EAAI,KACzDO,sBAAuB,OAIvBC,EAAe,CACnBpD,YAAa,EACbqD,OAAQ,CACNC,QAAS,CACPC,IAA0B,EAArBpJ,IACLqJ,MAAO,KAGXvD,UAAW,CACTC,SAAU,GAEZC,QAASoC,EACTnC,OAAQ,CACNxG,EAAG,CACDN,KAAM,WACNwJ,OAAQ/D,EAAUlE,SAAS3D,KAAI,SAACC,GAAD,OAAOA,KAAGsM,OAAO,GAAI,GAAI,SACxDpD,MAAO,CACLC,SAAS,EACTC,KAAM,OACNC,KAAM,CACJC,KAAMnG,IACNoG,OAAQ,4BAGZC,MAAO,CACLH,KAAM,CACJE,OAAQ,6BAIdjH,EAAG,CACDH,KAAM,cACNkF,IAAK,EACLC,IAAK,IACL4B,MAAO,CACLC,SAAS,EACTC,KAAM,iCACNC,KAAM,CACJC,KAAMnG,IACNoG,OAAQ,2BAEVa,MAAO,UAETZ,MAAO,CACLH,KAAM,CACJE,OAAQ,8BAKhBxH,QAAS,CACP0H,QAAS,CACP8C,SAAS,GAEXvC,OAAQ,CACNb,SAAS,GAEXnH,WAAY,CACVC,YAAa,CACXC,MAAO,CACLC,KAAM,OACNqK,KAAM,WACNpK,SAAU,aACVS,KAAM4I,EACNjJ,KAAMiJ,EACN7J,YAAa,qBACbc,YAAa,EACbC,WAAY,CAAC,MAInBsH,WAAY,CACVC,UAAW,SAACzJ,EAAOgM,GACjB,GAAIA,EAAQ9C,YAAc8C,EAAQ/C,QAAQhK,KAAKc,OAAS,EAAG,CACzD,IAAQP,EAAUwM,EAAQ/C,QAAlBzJ,MACFyM,EAAazM,EAAM0M,MAAM,KAC/B,GAAI1M,EAAM0M,MAAM,KAAKnM,OAAS,EAAG,CAE/B,IADA,IAAIoM,EAAe,GACVlL,EAAI,EAAGA,EAAIgL,EAAWlM,OAAQkB,GAAK,EACtCgL,EAAWhL,EAAI,GACjBkL,GAAY,UAAOF,EAAWhL,GAAlB,YAAwBgL,EAAWhL,EAAI,IAEnDkL,GAAY,UAAOF,EAAWhL,IAE5BA,EAAIgL,EAAWlM,OAAS,IAC1BoM,GAAgB,MAIpB,OAAOA,EAET,OAAOF,EAAWG,KAAK,KAEzB,OAAO,MAET1C,MAAO,QACPC,MAAO,QACPf,KAAM,CACJC,KAAMlG,IACNmG,OAAQ,2BAEVe,OAAQ,GACR9I,gBAAiB,iBAAM,sBACvB+I,aAAc,EACd7H,YAAa,EACb8H,OAAO,KAKb,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAM9K,KAAMA,EAAMoC,QAASmK,IAC3B,cAAC,EAAD,CACE7E,SAAUQ,EAAUlE,SACpB2D,IAAI,IACJC,IAAKM,EAAUlE,SAASlD,OAAS,EACjCC,MAAOmH,EAAUlE,SAAS5D,QAAQ2L,GAClClE,aAAc,gBAAG9B,EAAH,EAAGA,OAAH,OACZiG,EAAW9D,EAAUlE,SAAS+B,EAAOhF,cAI3C,cAAC,EAAD,CACEd,SAAUiI,EAAUjI,SACpB0E,eAAgBuD,EAAUvD,oBAMlC,OAAO,cAAC,EAAD,KCxMM,OAA0B,4CCA5ByI,GAAe,SAACvN,GAC3B,OAAQA,GACN,IAAK,UACH,MAAO,OACT,IAAK,GACH,MAAO,UACT,QACE,OAAOA,ICObwN,IAAMC,SAASC,KACfF,IAAMC,SAASE,KA+CAC,OA7Cf,WACE,MAA8B3J,mBAAS,MAAvC,mBAAOF,EAAP,KAAgB8J,EAAhB,KA0BA,OAxBAvJ,qBAAU,WACRwJ,IAAKC,MAAMC,GAAW,CACpBC,UAAU,EACV3C,QAAQ,EACR4C,SAAU,SAACC,GACT,IAAMC,EAAWD,EAAQhO,KACtBgF,QAAO,SAAC1E,GAAD,OAAQ4N,OAAOC,MAAMD,OAAO5N,EAAE+D,UACrChE,KAAI,SAAC+N,GAAD,MAAU,CACb7N,MAAO6N,EAAIC,YACXvF,UAAWsF,EAAItF,UACfC,eAAgBqF,EAAIrF,eACpBN,WAAY2F,EAAIE,IAChB5F,eAAgB0F,EAAIG,cACpB5F,IAAKyF,EAAIzF,IACT9I,UAAWuN,GAAagB,EAAIvO,WAC5BwE,MAAO+J,EAAI/J,SAEZW,QAAO,SAAC1E,GAAD,MAAuB,YAAhBA,EAAET,aAEnB6N,EAAWO,QAGd,IAGD,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,KAAI,UAAK7H,mCAAL,WAAX,SACE,cAAC,EAAD,CAAa/C,QAASA,MAExB,cAAC,IAAD,CAAO4K,KAAI,UAAK7H,mCAAL,SAAX,SACE,cAAC,GAAD,CAAW/C,QAASA,MAEtB,cAAC,IAAD,CAAO4K,KAAI,UAAK7H,mCAAL,KAAX,SACE,cAAC,EAAD,a,OClDV8H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U,mBCR1BC,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,IAAM,0BAA0B,OAAS,6BAA6B,qBAAqB,yCAAyC,uBAAuB,2CAA2C,eAAe,qC,mBCArTD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAW,yBAAyB,QAAU,wBAAwB,KAAO,uB,mBCA/HD,EAAOC,QAAU,CAAC,SAAW,uC,mBCA7BD,EAAOC,QAAU,CAAC,kBAAkB,mD,mBCApCD,EAAOC,QAAU,CAAC,eAAe,wC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,8B,mBCAhED,EAAOC,QAAU,CAAC,KAAO,sB","file":"static/js/main.a8a1e7b6.chunk.js","sourcesContent":["export const colours = {\n  Asia: {\n    red: 239,\n    green: 84,\n    blue: 106,\n  },\n  Americas: {\n    red: 136,\n    green: 229,\n    blue: 25,\n  },\n  Europe: {\n    red: 251,\n    green: 226,\n    blue: 34,\n  },\n  Africa: {\n    red: 74,\n    green: 206,\n    blue: 228,\n  },\n  Unknown: {\n    red: 0,\n    green: 0,\n    blue: 0,\n  },\n};\n\nexport const getColour = (continent, alpha = 1) => {\n  if (colours[continent]) {\n    return `rgba(${colours[continent].red}, ${colours[continent].green}, ${colours[continent].blue}, ${alpha})`;\n  }\n  return null;\n};\n\nexport const getBubbleBackgroundColour = (data, selected) => {\n  if (Object.values(selected).indexOf(true) === -1) {\n    return data.map((d) => getColour(d.continent, 0.8));\n  }\n  return data.map((d) =>\n    selected[d.label]\n      ? getColour(d.continent, 0.8)\n      : getColour(d.continent, 0.2),\n  );\n};\n\nexport const getBubbleBorderColour = (data, selected) => {\n  if (Object.values(selected).indexOf(true) === -1) {\n    return data.map(() => \"rgba(128, 128, 128, 0.8)\");\n  }\n  return data.map((d) => {\n    if (selected[d.label]) {\n      return \"rgba(128, 128, 128, 0.8)\";\n    }\n    return \"rgba(128, 128, 128, 0.1)\";\n  });\n};\n","import { getBubbleBackgroundColour, getBubbleBorderColour } from \"./colours\";\n\nconst getPrintableValue = (value) => {\n  let suffix;\n  const log = Math.log10(value);\n  const e = Math.floor(log / 3);\n\n  switch (e) {\n    case 0:\n      suffix = \"\";\n      break;\n    case 1:\n      suffix = \"k\";\n      break;\n    case 2:\n      suffix = \"M\";\n      break;\n    case 3:\n      suffix = \"B\";\n      break;\n    default:\n      break;\n  }\n\n  const prefix = String(value / 10 ** (3 * e))\n    .slice(0, 4)\n    .replace(/\\.$/, \"\");\n  return prefix + suffix;\n};\n\nexport const bubbleChartHover = (\n  e,\n  data,\n  chart,\n  radiusScale,\n  selected,\n  setHoverValue,\n) => {\n  if (data.length) {\n    // hovering over a data point\n\n    // set hover value to size value\n    setHoverValue(\n      getPrintableValue(data[0].element.$context.parsed._custom / radiusScale),\n    );\n\n    // update chart colours to darken hovered bubble\n    // and lighten others\n    chart.data.datasets[0].backgroundColor =\n      chart.data.datasets[0].backgroundColor.map((c, i) =>\n        i === data[0].index\n          ? c.replace(/0.[0-9]\\)/, \"1)\")\n          : c.replace(/0.[0-9]\\)|1\\)/, \"0.1)\"),\n      );\n\n    // lighten borders\n    chart.data.datasets[0].borderColor = chart.data.datasets[0].data.map(\n      (d, i) =>\n        i === data[0].index\n          ? \"rgba(128, 128, 128, 0.8)\"\n          : \"rgba(128, 128, 128, 0.1)\",\n    );\n\n    // add line annotation\n    chart.config.options.plugins.annotation = {\n      annotations: {\n        line1: {\n          type: \"line\",\n          drawTime: \"beforeDraw\",\n          yMin: data[0].element.$context.parsed.y,\n          yMax: data[0].element.$context.parsed.y,\n          xMax: data[0].element.$context.parsed.x,\n          borderColor: \"rgb((255, 99, 132)\",\n          borderWidth: 2,\n          borderDash: [4],\n        },\n        line2: {\n          type: \"line\",\n          drawTime: \"beforeDraw\",\n          xMin: data[0].element.$context.parsed.x,\n          xMax: data[0].element.$context.parsed.x,\n          yMin: 0,\n          yMax: data[0].element.$context.parsed.y,\n          borderColor: \"rgb((255, 99, 132)\",\n          borderWidth: 2,\n          borderDash: [4],\n        },\n      },\n    };\n\n    chart.update();\n  } else {\n    // hovering over plot background\n\n    // remove hover value\n    setHoverValue(null);\n\n    // darken all bubbles to the background colour\n    chart.data.datasets[0].backgroundColor = getBubbleBackgroundColour(\n      chart.data.datasets[0].data,\n      selected,\n    );\n\n    // darken border\n    chart.data.datasets[0].borderColor = getBubbleBorderColour(\n      chart.data.datasets[0].data,\n      selected,\n    );\n\n    // remove annotation\n    chart.config.options.plugins.annotation = undefined;\n\n    chart.update();\n  }\n};\n","export const getTitleFontSize = () => {\n  if (window.innerWidth > 1280) {\n    return 36;\n  }\n  if (window.innerWidth > 720) {\n    return 30;\n  }\n  if (window.innerWidth > 480) {\n    return 24;\n  }\n  return 20;\n};\n\nexport const getAxisFontSize = () => {\n  if (window.innerWidth > 1280) {\n    return 28;\n  }\n  if (window.innerWidth > 720) {\n    return 24;\n  }\n  if (window.innerWidth > 480) {\n    return 16;\n  }\n  return 12;\n};\n\nexport const getDatalabelFontSize = () => {\n  if (window.innerWidth > 1280) {\n    return 20;\n  }\n  if (window.innerWidth > 720) {\n    return 16;\n  }\n  return 12;\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useChartData = (allData, defaultSelected = []) => {\n  const [data, setData] = useState(allData);\n  const [allYears, setAllYears] = useState([]);\n  const [selected, setSelected] = useState({});\n\n  // allows initialData to be updated once loaded\n  useEffect(() => {\n    setData(allData);\n  }, [allData]);\n\n  // set data properties\n  useEffect(() => {\n    if (allData) {\n      setAllYears([...new Set(allData.map((d) => d.year))]);\n    }\n  }, [allData]);\n\n  // initialize selected data\n  const initializeData = (newData) => {\n    setData(newData);\n    setSelected(\n      [...new Set(newData.map((d) => d.label))].reduce((o, a) => {\n        if (defaultSelected.indexOf(a) === -1) {\n          o[a] = false;\n        } else {\n          o[a] = true;\n        }\n\n        return o;\n      }, {}),\n    );\n  };\n\n  // toggle a selected country\n  const toggleSelected = (country) => {\n    setSelected({ ...selected, [country]: !selected[country] });\n  };\n\n  // filter data\n  const filterData = (func) => {\n    if (allData) {\n      const filteredData = allData.filter(func);\n      setData(filteredData);\n    }\n  };\n\n  return {\n    data,\n    allYears,\n    selected,\n    toggleSelected,\n    filterData,\n    initializeData,\n  };\n};\n","import { useLayoutEffect, useState } from \"react\";\n\nexport const useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  // respond to changes in window width\n  useLayoutEffect(() => {\n    const updateWidth = () => {\n      setWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n\n    // cleanup\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  return width;\n};\n","import React from \"react\";\nimport styles from \"./BubbleSizeDropdown.module.scss\";\n\nexport const BubbleSizeDropdown = ({ sizeValue, setSizeValue, hoverValue }) => (\n  <select\n    name=\"pets\"\n    defaultValue={sizeValue}\n    onChange={(e) => setSizeValue(e.target.value)}\n    className={styles.dropdown}\n  >\n    <option value=\"population\">\n      {sizeValue === \"population\" && hoverValue ? hoverValue : \"Population\"}\n    </option>\n    <option value=\"babiesPerWoman\">\n      {sizeValue === \"babiesPerWoman\" && hoverValue\n        ? hoverValue\n        : \"Babies per Woman\"}\n    </option>\n    <option value=\"co2\">\n      {sizeValue === \"co2\" && hoverValue\n        ? hoverValue\n        : \"CO2 Emissions per Person\"}\n    </option>\n  </select>\n);\n","import React from \"react\";\nimport styles from \"./ChartAndSliderContainer.module.scss\";\n\nexport const ChartAndSliderContainer = ({ children }) => (\n  <section className={`df df-fc df-ai-c ${styles[\"chart-container\"]}`}>\n    {children}\n  </section>\n);\n","import React from \"react\";\nimport styles from \"./ChartPageLayout.module.scss\";\n\nexport const ChartPageLayout = ({ children }) => (\n  <main className={`container df df-ai-c ${styles[\"chart-layout\"]}`}>\n    {children}\n  </main>\n);\n","import React, { useState } from \"react\";\nimport styles from \"./ChartSidebar.module.scss\";\n\nexport const ChartSidebar = ({ selected, toggleSelected, children }) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  return (\n    <section className={`df df-fc df-ai-c ${styles.sidebar}`}>\n      <img\n        src={`${process.env.PUBLIC_URL}/world_colour_map.svg`}\n        alt=\"Colour legend map for plot points\"\n        className={styles.map}\n      />\n      <input\n        type=\"text\"\n        value={searchValue}\n        onChange={({ target }) => setSearchValue(target.value)}\n        className={styles.search}\n        placeholder=\"Search\"\n      />\n\n      <article className={`df df-fc df-ai-fs ${styles.select}`}>\n        {Object.entries(selected).filter((o) => o[1] === true).length > 0 ? (\n          <article\n            className={`df df-fc df-ai-fs ${styles[\"selected-countries\"]}`}\n          >\n            {/* list of selected countries */}\n\n            {Object.entries(selected)\n              .filter((o) => o[1] === true)\n              .map((o) => o[0])\n              .map((l) => (\n                <article className={styles[\"country-name\"]} key={l}>\n                  <input\n                    type=\"checkbox\"\n                    id={l}\n                    name={l}\n                    defaultChecked={selected[l]}\n                    onClick={() => toggleSelected(l)}\n                  />\n                  <label htmlFor={l}>{l}</label>\n                </article>\n              ))}\n          </article>\n        ) : null}\n\n        <article\n          className={`df df-fc df-ai-fs ${styles[\"unselected-countries\"]}`}\n        >\n          {/* list of unselected countries or countries matching search value */}\n\n          {searchValue === \"\"\n            ? Object.entries(selected)\n                .filter((o) => o[1] === false)\n                .map((o) => o[0])\n                .map((l) => (\n                  <article className={styles[\"country-name\"]} key={l}>\n                    <input\n                      type=\"checkbox\"\n                      id={l}\n                      name={l}\n                      defaultChecked={selected[l]}\n                      onClick={() => toggleSelected(l)}\n                    />\n                    <label htmlFor={l}>{l}</label>\n                  </article>\n                ))\n            : Object.entries(selected)\n                .filter((o) => o[1] === false)\n                .map((o) => o[0])\n                .filter(\n                  (n) => n.toLowerCase().search(searchValue.toLowerCase()) > -1,\n                )\n                .map((l) => (\n                  <article className={styles[\"country-name\"]} key={l}>\n                    <input\n                      type=\"checkbox\"\n                      id={l}\n                      name={l}\n                      defaultChecked={selected[l]}\n                      onClick={() => toggleSelected(l)}\n                    />\n                    <label htmlFor={l}>{l}</label>\n                  </article>\n                ))}\n        </article>\n      </article>\n      {children}\n    </section>\n  );\n};\n","import React from \"react\";\n\nexport const Loading = () => <h2>Loading...</h2>;\n","import React from \"react\";\nimport styles from \"./Slider.module.scss\";\n\nexport const Slider = ({ listData, min, max, value, handleChange }) => (\n  <>\n    <input\n      className={styles.slider}\n      type=\"range\"\n      min={min}\n      max={max}\n      value={value}\n      list=\"slider-data\"\n      onChange={handleChange}\n    />\n    <datalist id=\"slider-data\">\n      {listData.map((d) => (\n        <option key={d} value={d} aria-label={d} />\n      ))}\n    </datalist>\n  </>\n);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Bubble } from \"react-chartjs-2\";\nimport { bubbleChartHover } from \"../helpers/bubbleChartHover\";\nimport {\n  getBubbleBackgroundColour,\n  getBubbleBorderColour,\n} from \"../helpers/colours\";\nimport {\n  getAxisFontSize,\n  getDatalabelFontSize,\n  getTitleFontSize,\n} from \"../helpers/getFontSize\";\nimport { useChartData } from \"../hooks/useChartData\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { BubbleSizeDropdown } from \"./BubbleSizeDropdown\";\nimport { ChartAndSliderContainer } from \"./ChartAndSliderContainer\";\nimport { ChartPageLayout } from \"./ChartPageLayout\";\nimport { ChartSidebar } from \"./ChartSidebar\";\nimport { Loading } from \"./Loading\";\nimport { Slider } from \"./Slider\";\n\nexport const BubbleChart = ({ allData }) => {\n  const chartData = useChartData(allData);\n  const width = useWindowWidth();\n\n  const [radiusCategory, setRadiusCategory] = useState(\"population\");\n  const [currentYear, setCurrentYear] = useState(2007);\n  const [hoverValue, setHoverValue] = useState(null);\n\n  const chartRef = useRef(null);\n\n  // define how bubble radii are scaled\n  const radiusScale = {\n    population: width > 720 ? 1 / 15000000 : 1 / 20000000,\n    babiesPerWoman: 3,\n    co2: 1,\n  };\n\n  // update chartData once loaded\n  useEffect(() => {\n    if (allData) {\n      chartData.initializeData(allData.filter((d) => d.year === currentYear));\n    }\n  }, [allData]);\n\n  // filter chartData when currentYear changes\n  useEffect(() => {\n    chartData.filterData((d) => d.year === currentYear);\n  }, [currentYear]);\n\n  // update chart to resize font on window resize\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.update();\n    }\n  }, [width]);\n\n  if (chartData.data && chartData.selected) {\n    // data available to render\n\n    const bubbleChartData = {\n      datasets: [\n        {\n          label: \"Population\",\n          data: chartData.data.map((d) => ({\n            x: d.gdpPercap,\n            y: d.lifeExpectancy,\n            label: d.label,\n            r: radiusScale[radiusCategory] * d[radiusCategory],\n            continent: d.continent,\n          })),\n          backgroundColor: getBubbleBackgroundColour(\n            chartData.data,\n            chartData.selected,\n          ),\n          borderWidth: 1,\n          borderColor: getBubbleBorderColour(\n            chartData.data,\n            chartData.selected,\n          ),\n          clip: 0,\n        },\n      ],\n    };\n\n    const bubbleChartOptions = {\n      aspectRatio: 1,\n      animation: {\n        duration: 0,\n      },\n      onHover: (e, data, chart) =>\n        bubbleChartHover(\n          e,\n          data,\n          chart,\n          radiusScale[radiusCategory],\n          chartData.selected,\n          setHoverValue,\n        ),\n      onClick: (e, data, chart) => {\n        if (data.length) {\n          chartData.toggleSelected(\n            chart.data.datasets[0].data[data[0].index].label,\n          );\n        }\n      },\n      scales: {\n        x: {\n          type: \"logarithmic\",\n          min: 0,\n          max: 128000,\n          title: {\n            display: true,\n            text: \"Income per person (GDP/capita)\",\n            font: {\n              size: getAxisFontSize(),\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n          ticks: {\n            font: {\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n        },\n        y: {\n          min: 20,\n          max: 90,\n          title: {\n            display: true,\n            text: \"Life expectancy (years)\",\n            font: {\n              size: getAxisFontSize(),\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n          ticks: {\n            font: {\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n        },\n      },\n      plugins: {\n        tooltip: {\n          filter: (chart) => {\n            // disable tooltip if data point is selected\n            const { label } = chart.dataset.data[chart.dataIndex];\n            return !chartData.selected[label];\n          },\n          callbacks: {\n            label: (ctx) => ctx.dataset.data[ctx.dataIndex].label,\n          },\n          bodyFont: {\n            family: \"'Work Sans', sans-serif\",\n            size: getDatalabelFontSize(),\n          },\n          displayColors: false,\n        },\n        legend: {\n          display: false,\n        },\n        title: {\n          display: true,\n          text: currentYear,\n          font: {\n            size: getTitleFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        datalabels: {\n          formatter: (value) => {\n            // apply labels to selected data points\n            const { label } = value;\n            if (chartData.selected[label]) {\n              return value.label;\n            }\n            return null;\n          },\n          color: \"rgb(255, 255, 255)\",\n          align: \"top\",\n          font: {\n            size: getDatalabelFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n          anchor: \"end\",\n          offset: 4,\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n          borderColor: \"rgb(128, 128, 128)\",\n          borderRadius: 2,\n          borderWidth: 1,\n          clamp: true,\n        },\n      },\n    };\n\n    return (\n      <ChartPageLayout>\n        <ChartAndSliderContainer>\n          <Bubble\n            data={bubbleChartData}\n            options={bubbleChartOptions}\n            ref={chartRef}\n          />\n          <Slider\n            listData={chartData.allYears}\n            min=\"0\"\n            max={chartData.allYears.length - 1}\n            value={chartData.allYears.indexOf(currentYear)}\n            handleChange={({ target }) =>\n              setCurrentYear(chartData.allYears[target.value])\n            }\n          />\n        </ChartAndSliderContainer>\n        <ChartSidebar\n          selected={chartData.selected}\n          toggleSelected={chartData.toggleSelected}\n        >\n          <BubbleSizeDropdown\n            sizeValue={radiusCategory}\n            setSizeValue={setRadiusCategory}\n            hoverValue={hoverValue}\n          />\n        </ChartSidebar>\n      </ChartPageLayout>\n    );\n  }\n\n  return <Loading />;\n};\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nexport const Header = () => {\n  const location = useLocation();\n\n  return (\n    <header className={`container df df-ai-c df-jc-c ${styles.header}`}>\n      <Link to={`${process.env.PUBLIC_URL}/`}>\n        <h1 className={styles.logo}>Gapminder</h1>\n      </Link>\n\n      <nav className=\"df\">\n        <Link\n          to={`${process.env.PUBLIC_URL}/`}\n          className={`${styles[\"nav-link\"]} ${\n            location.pathname === `${process.env.PUBLIC_URL}/` ? styles.current : null\n          }`}\n        >\n          Home\n        </Link>\n        <Link\n          to={`${process.env.PUBLIC_URL}/bubble`}\n          className={`${styles[\"nav-link\"]} ${\n            location.pathname === `${process.env.PUBLIC_URL}/bubble` ? styles.current : null\n          }`}\n        >\n          Bubble\n        </Link>\n        <Link\n          to={`${process.env.PUBLIC_URL}/line`}\n          className={`${styles[\"nav-link\"]} ${\n            location.pathname === `${process.env.PUBLIC_URL}/line` ? styles.current : null\n          }`}\n        >\n          Line\n        </Link>\n      </nav>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nexport const Home = () => (\n  <main className=\"container\">\n    <h2>Gapminder Data Visualization</h2>\n\n    <article className={`df df-fc df-ai-c df-jc-c ${styles.text}`}>\n      <p>\n        <a\n          href=\"https://www.gapminder.org/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gapminder\n        </a>{\" \"}\n        is a Swedish organization that fights ignorance and promotes a better\n        understanding of the world by making data available and accessible.\n        <br />\n        <br />\n        Explore the relationship between GDP per capita, life expectancy and\n        other attributes with a Bubble Chart <Link to={`${process.env.PUBLIC_URL}/bubble`}>here</Link>.\n        <br />\n        <br />\n        Explore how GDP per capita changes over time in different countries here\n        with a Line Chart <Link to={`${process.env.PUBLIC_URL}/line`}>here</Link>.\n        <br />\n      </p>\n    </article>\n  </main>\n);\n","export const lineChartHover = (e, data, chart) => {\n  if (data.length) {\n    // fade non-hovered datalabel backgrounds\n    chart.config.options.plugins.datalabels.backgroundColor = (d) =>\n      d.datasetIndex === data[0].datasetIndex\n        ? \"rgba(0, 0, 0, 0.8)\"\n        : \"rgba(0, 0, 0, 0.1)\";\n\n    chart.config.options.plugins.datalabels.color = (d) =>\n      d.datasetIndex === data[0].datasetIndex\n        ? \"rgba(255, 255, 255, 1)\"\n        : \"rgba(255, 255, 255, 0.1)\";\n\n    // fade colour of non-hovered lines/points\n    chart.data.datasets = chart.data.datasets.map((d, i) => {\n      if (i === data[0].datasetIndex) {\n        return d;\n      }\n      return {\n        ...d,\n        borderColor: d.borderColor.replace(/[0.]?1\\)/, \"0.1)\"),\n        pointBackgroundColor: d.pointBackgroundColor.replace(\n          /[0.]?1\\)/,\n          \"0.1)\",\n        ),\n        pointBorderColor: \"rgba(128, 128, 128, 0.1)\",\n      };\n    });\n\n    chart.update();\n  } else {\n    // darken datalabel background colour\n    chart.config.options.plugins.datalabels.backgroundColor = () =>\n      \"rgba(0, 0, 0, 0.8)\";\n\n    chart.config.options.plugins.datalabels.color = () =>\n      \"rgba(255, 255, 255, 1)\";\n\n    // darken lines/points\n    chart.data.datasets = chart.data.datasets.map((d) => ({\n      ...d,\n      borderColor: d.borderColor.replace(/0.1\\)/, \"1)\"),\n      pointBackgroundColor: d.pointBackgroundColor.replace(/0.1\\)/, \"1)\"),\n      pointBorderColor: \"rgb(0, 0, 0)\",\n    }));\n\n    chart.update();\n  }\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { getColour } from \"../helpers/colours\";\nimport {\n  getAxisFontSize,\n  getDatalabelFontSize,\n  getTitleFontSize,\n} from \"../helpers/getFontSize\";\nimport { lineChartHover } from \"../helpers/lineChartHover\";\nimport { useChartData } from \"../hooks/useChartData\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { ChartAndSliderContainer } from \"./ChartAndSliderContainer\";\nimport { ChartPageLayout } from \"./ChartPageLayout\";\nimport { ChartSidebar } from \"./ChartSidebar\";\nimport { Loading } from \"./Loading\";\nimport { Slider } from \"./Slider\";\n\nexport const LineChart = ({ allData }) => {\n  const chartData = useChartData(allData, [\"Canada\", \"Indonesia\", \"Nigeria\"]);\n  const width = useWindowWidth();\n\n  const [maxYear, setMaxYear] = useState(2007);\n\n  const chartRef = useRef(null);\n\n  // update chartData once loaded\n  useEffect(() => {\n    if (allData) {\n      chartData.initializeData(allData.filter((d) => d.year <= maxYear));\n    }\n  }, [allData]);\n\n  // filter chartData when maxYear changes\n  useEffect(() => {\n    chartData.filterData((d) => d.year <= maxYear);\n  }, [maxYear]);\n\n  // update chart to resize font on window resize\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.update();\n    }\n  }, [width]);\n\n  if (chartData.data && chartData.selected) {\n    // data available to render\n\n    const data = {\n      labels: chartData.allYears,\n      datasets: Object.entries(chartData.selected)\n        .filter((o) => o[1] === true)\n        .map((o) => o[0])\n        .map((c) => chartData.data.filter((d) => d.label === c))\n        .filter((c) => c.length > 0)\n        .map((c) => ({\n          label: c[0].label,\n          data: c.map((p) => ({ x: p.year, y: p.gdpPercap })),\n          borderColor: getColour(c[0].continent),\n          borderWidth: 5,\n          pointBorderWidth: 3,\n          pointBackgroundColor: getColour(c[0].continent),\n          pointBorderColor: \"rgb(0, 0, 0)\",\n          pointRadius: c.map((p) => (p.year === maxYear ? 8 : 0)),\n          pointHoverRadius: c.map((p) => (p.year === maxYear ? 8 : 0)),\n          pointHoverBorderWidth: 3,\n        })),\n    };\n\n    const chartOptions = {\n      aspectRatio: 1,\n      layout: {\n        padding: {\n          top: getTitleFontSize() * 2,\n          right: 60,\n        },\n      },\n      animation: {\n        duration: 0,\n      },\n      onHover: lineChartHover,\n      scales: {\n        x: {\n          type: \"category\",\n          labels: chartData.allYears.map((d) => d).concat(\"\", \"\", \"Today\"),\n          title: {\n            display: true,\n            text: \"Time\",\n            font: {\n              size: getAxisFontSize(),\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n          ticks: {\n            font: {\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n        },\n        y: {\n          type: \"logarithmic\",\n          min: 0,\n          max: 80000,\n          title: {\n            display: true,\n            text: \"Income per person (GDP/capita)\",\n            font: {\n              size: getAxisFontSize(),\n              family: \"'Work Sans', sans-serif\",\n            },\n            align: \"center\",\n          },\n          ticks: {\n            font: {\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n        },\n      },\n      plugins: {\n        tooltip: {\n          enabled: false,\n        },\n        legend: {\n          display: false,\n        },\n        annotation: {\n          annotations: {\n            line1: {\n              type: \"line\",\n              mode: \"vertical\",\n              drawTime: \"beforeDraw\",\n              xMin: maxYear,\n              xMax: maxYear,\n              borderColor: \"rgb(128, 128, 128)\",\n              borderWidth: 1,\n              borderDash: [3],\n            },\n          },\n        },\n        datalabels: {\n          formatter: (value, context) => {\n            if (context.dataIndex === context.dataset.data.length - 1) {\n              const { label } = context.dataset;\n              const labelSplit = label.split(\" \");\n              if (label.split(\" \").length > 2) {\n                let wrappedLabel = \"\";\n                for (let i = 0; i < labelSplit.length; i += 2) {\n                  if (labelSplit[i + 1]) {\n                    wrappedLabel += `${labelSplit[i]} ${labelSplit[i + 1]}`;\n                  } else {\n                    wrappedLabel += `${labelSplit[i]}`;\n                  }\n                  if (i < labelSplit.length - 2) {\n                    wrappedLabel += \"\\n\";\n                  }\n                }\n\n                return wrappedLabel;\n              }\n              return labelSplit.join(\" \");\n            }\n            return null;\n          },\n          color: \"white\",\n          align: \"right\",\n          font: {\n            size: getDatalabelFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n          offset: 14,\n          backgroundColor: () => \"rgba(0, 0, 0, 0.8)\",\n          borderRadius: 2,\n          borderWidth: 1,\n          clamp: true,\n        },\n      },\n    };\n\n    return (\n      <ChartPageLayout>\n        <ChartAndSliderContainer>\n          <Line data={data} options={chartOptions} />\n          <Slider\n            listData={chartData.allYears}\n            min=\"0\"\n            max={chartData.allYears.length - 1}\n            value={chartData.allYears.indexOf(maxYear)}\n            handleChange={({ target }) =>\n              setMaxYear(chartData.allYears[target.value])\n            }\n          />\n        </ChartAndSliderContainer>\n        <ChartSidebar\n          selected={chartData.selected}\n          toggleSelected={chartData.toggleSelected}\n        />\n      </ChartPageLayout>\n    );\n  }\n\n  return <Loading />;\n};\n","export default __webpack_public_path__ + \"static/media/gapminder_clean.ab8b93e9.csv\";","export const getContinent = (continent) => {\n  switch (continent) {\n    case \"Oceania\":\n      return \"Asia\";\n    case \"\":\n      return \"Unknown\";\n    default:\n      return continent;\n  }\n};\n","import { Chart } from \"chart.js\";\nimport annotationPlugin from \"chartjs-plugin-annotation\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport Papa from \"papaparse\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BubbleChart } from \"./components/BubbleChart\";\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./components/Home\";\nimport { LineChart } from \"./components/LineChart\";\nimport gapminder from \"./data/gapminder_clean.csv\";\nimport { getContinent } from \"./helpers/getContinent\";\n\n// register Chart.js plugins globally\nChart.register(annotationPlugin);\nChart.register(ChartDataLabels);\n\nfunction App() {\n  const [allData, setAllData] = useState(null);\n\n  useEffect(() => {\n    Papa.parse(gapminder, {\n      download: true,\n      header: true,\n      complete: (results) => {\n        const filtered = results.data\n          .filter((d) => !Number.isNaN(Number(d.year)))\n          .map((res) => ({\n            label: res.countryName,\n            gdpPercap: res.gdpPercap,\n            lifeExpectancy: res.lifeExpectancy,\n            population: res.pop,\n            babiesPerWoman: res.fertilityRate,\n            co2: res.co2,\n            continent: getContinent(res.continent),\n            year: +res.year,\n          }))\n          .filter((d) => d.continent !== \"Unknown\");\n\n        setAllData(filtered);\n      },\n    });\n  }, []);\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/bubble`}>\n          <BubbleChart allData={allData} />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/line`}>\n          <LineChart allData={allData} />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/`}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"ChartSidebar_sidebar__33mph\",\"select\":\"ChartSidebar_select__HDUmD\",\"map\":\"ChartSidebar_map__3YK4v\",\"search\":\"ChartSidebar_search__FfVKM\",\"selected-countries\":\"ChartSidebar_selected-countries__2HJ63\",\"unselected-countries\":\"ChartSidebar_unselected-countries__GVGoy\",\"country-name\":\"ChartSidebar_country-name__20cV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2XAj3\",\"nav-link\":\"Header_nav-link__2_Uhp\",\"current\":\"Header_current__2i1-b\",\"logo\":\"Header_logo__2XG30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"BubbleSizeDropdown_dropdown__1D_wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-container\":\"ChartAndSliderContainer_chart-container__2vDfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-layout\":\"ChartPageLayout_chart-layout__Oev08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"Slider_slider__oktDX\",\"sliderfocus\":\"Slider_sliderfocus__Q-bHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Home_text__1ZAGp\"};"],"sourceRoot":""}
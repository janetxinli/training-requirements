{"version":3,"sources":["helpers/colours.js","helpers/getPrintableValue.js","helpers/bubbleChartHover.js","helpers/getFontSize.js","helpers/getAxis.js","hooks/useChartData.js","hooks/useWindowWidth.js","components/AxisDropdown.js","components/BubbleSizeDropdown.js","components/ChartAndSliderContainer.js","components/ChartPageLayout.js","components/ChartSidebar.js","components/Loading.js","components/Slider.js","components/BubbleChart.js","components/Header.js","components/Home.js","helpers/lineChartHover.js","components/LineChart.js","data/gapminder_clean.csv","helpers/getContinent.js","App.js","index.js","components/ChartSidebar.module.scss","components/Header.module.scss","components/ChartAndSliderContainer.module.scss","components/ChartPageLayout.module.scss","components/Slider.module.scss","components/Home.module.scss"],"names":["colours","Asia","red","green","blue","Americas","Europe","Africa","Unknown","getColour","continent","alpha","getBubbleBackgroundColour","data","selected","Object","values","indexOf","map","d","label","getBubbleBorderColour","getPrintableValue","value","suffix","log","Math","log10","e","floor","String","slice","replace","inverseRadiusScale","population","v","PI","fertilityRate","co2","getTitleFontSize","window","innerWidth","getAxisFontSize","getDatalabelFontSize","getAxis","category","chartData","type","offset","min","max","title","display","text","font","size","family","ticks","autoSkip","includeBounds","backdropPadding","labels","allYears","concat","callback","i","major","useChartData","allData","defaultSelected","useState","setData","setAllYears","setSelected","useEffect","Set","year","initializeData","newData","reduce","o","a","toggleSelected","country","filterData","func","filteredData","filter","useWindowWidth","width","setWidth","useLayoutEffect","updateWidth","addEventListener","removeEventListener","AxisDropdown","choice","handleChange","className","defaultValue","onChange","BubbleSizeDropdown","sizeValue","setSizeValue","hoverValue","target","ChartAndSliderContainer","children","styles","ChartPageLayout","ChartSidebar","searchValue","setSearchValue","sidebar","src","process","alt","search","placeholder","select","entries","length","l","id","name","defaultChecked","onClick","htmlFor","n","toLowerCase","Loading","Slider","listData","slider","list","aria-label","BubbleChart","radiusCategory","setRadiusCategory","currentYear","setCurrentYear","setHoverValue","xAxis","setXAxis","yAxis","setYAxis","useConstant","setUseConstant","chartRef","useRef","radiusScale","sqrt","constantRadius","current","update","bubbleChartData","datasets","x","y","r","backgroundColor","borderWidth","borderColor","clip","bubbleChartOptions","aspectRatio","responsive","maintainAspectRatio","animation","duration","onHover","chart","element","$context","parsed","_custom","c","index","config","options","plugins","annotation","annotations","line2","drawTime","yMin","yMax","xMax","borderDash","line3","xMin","bubbleChartHover","scales","reverse","tooltip","dataset","dataIndex","callbacks","ctx","bodyFont","displayColors","legend","datalabels","formatter","color","align","anchor","borderRadius","clamp","line1","ref","height","preventDefault","Header","location","useLocation","header","to","logo","pathname","Home","href","rel","lineChartHover","datasetIndex","pointBackgroundColor","pointBorderColor","LineChart","maxYear","setMaxYear","lineChartData","p","gdpPercap","pointBorderWidth","pointRadius","pointHoverRadius","pointHoverBorderWidth","lineChartOptions","layout","padding","top","right","enabled","mode","context","labelSplit","split","wrappedLabel","join","getContinent","Chart","register","annotationPlugin","ChartDataLabels","App","setAllData","Papa","parse","gapminder","download","complete","results","filtered","Number","isNaN","res","countryName","lifeExpectancy","pop","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d166a891.chunk.js","sourcesContent":["export const colours = {\n  Asia: {\n    red: 239,\n    green: 84,\n    blue: 106,\n  },\n  Americas: {\n    red: 136,\n    green: 229,\n    blue: 25,\n  },\n  Europe: {\n    red: 251,\n    green: 226,\n    blue: 34,\n  },\n  Africa: {\n    red: 74,\n    green: 206,\n    blue: 228,\n  },\n  Unknown: {\n    red: 0,\n    green: 0,\n    blue: 0,\n  },\n};\n\nexport const getColour = (continent, alpha = 1) => {\n  if (colours[continent]) {\n    return `rgba(${colours[continent].red}, ${colours[continent].green}, ${colours[continent].blue}, ${alpha})`;\n  }\n  return null;\n};\n\nexport const getBubbleBackgroundColour = (data, selected) => {\n  if (Object.values(selected).indexOf(true) === -1) {\n    return data.map((d) => getColour(d.continent, 0.8));\n  }\n  return data.map((d) =>\n    selected[d.label]\n      ? getColour(d.continent, 0.8)\n      : getColour(d.continent, 0.2),\n  );\n};\n\nexport const getBubbleBorderColour = (data, selected) => {\n  if (Object.values(selected).indexOf(true) === -1) {\n    return data.map(() => \"rgba(128, 128, 128, 0.8)\");\n  }\n  return data.map((d) => {\n    if (selected[d.label]) {\n      return \"rgba(128, 128, 128, 0.8)\";\n    }\n    return \"rgba(128, 128, 128, 0.1)\";\n  });\n};\n","export const getPrintableValue = (value) => {\n  if (value === 0) {\n    return \"0\"\n  }\n\n  let suffix;\n  const log = Math.log10(value);\n  const e = Math.floor(log / 3);\n\n  switch (e) {\n    case 0:\n      suffix = \"\";\n      break;\n    case 1:\n      suffix = \"k\";\n      break;\n    case 2:\n      suffix = \"M\";\n      break;\n    case 3:\n      suffix = \"B\";\n      break;\n    default:\n      break;\n  }\n\n  const prefix = String(value / 10 ** (3 * e))\n    .slice(0, 4)\n    .replace(/\\.$/, \"\");\n    \n  return prefix + suffix;\n};\n","import { getBubbleBackgroundColour, getBubbleBorderColour } from \"./colours\";\nimport { getPrintableValue } from \"./getPrintableValue\";\n\nconst inverseRadiusScale = {\n  population: (v) => Math.PI * (300 * v) ** 2,\n  fertilityRate: (v) => Math.PI * (v / 25) ** 2,\n  co2: (v) => Math.PI * v ** 2,\n};\n\nexport const bubbleChartHover = (\n  e,\n  data,\n  chart,\n  radiusCategory,\n  selected,\n  setHoverValue,\n) => {\n  if (data.length) {\n    // hovering over a data point\n    // set hover value to size value\n    setHoverValue(\n      getPrintableValue(\n        inverseRadiusScale[radiusCategory](\n          data[0].element.$context.parsed._custom,\n        ),\n      ),\n    );\n\n    // update chart colours to darken hovered bubble\n    // and lighten others\n    chart.data.datasets[0].backgroundColor =\n      chart.data.datasets[0].backgroundColor.map((c, i) =>\n        i === data[0].index\n          ? c.replace(/0.[0-9]\\)/, \"1)\")\n          : c.replace(/0.[0-9]\\)|1\\)/, \"0.1)\"),\n      );\n\n    // lighten borders\n    chart.data.datasets[0].borderColor = chart.data.datasets[0].data.map(\n      (d, i) =>\n        i === data[0].index\n          ? \"rgba(128, 128, 128, 0.8)\"\n          : \"rgba(128, 128, 128, 0.1)\",\n    );\n\n    // add line annotation\n    chart.config.options.plugins.annotation = {\n      ...chart.config.options.plugins.annotation,\n      annotations: {\n        line2: {\n          type: \"line\",\n          drawTime: \"beforeDraw\",\n          yMin: data[0].element.$context.parsed.y,\n          yMax: data[0].element.$context.parsed.y,\n          xMax: data[0].element.$context.parsed.x,\n          borderColor: \"rgb((255, 99, 132)\",\n          borderWidth: 2,\n          borderDash: [4],\n        },\n        line3: {\n          type: \"line\",\n          drawTime: \"beforeDraw\",\n          xMin: data[0].element.$context.parsed.x,\n          xMax: data[0].element.$context.parsed.x,\n          yMin: 0,\n          yMax: data[0].element.$context.parsed.y,\n          borderColor: \"rgb((255, 99, 132)\",\n          borderWidth: 2,\n          borderDash: [4],\n        },\n      },\n    };\n\n    chart.update();\n  } else {\n    // hovering over plot background\n\n    // remove hover value\n    setHoverValue(null);\n\n    // darken all bubbles to the background colour\n    chart.data.datasets[0].backgroundColor = getBubbleBackgroundColour(\n      chart.data.datasets[0].data,\n      selected,\n    );\n\n    // darken border\n    chart.data.datasets[0].borderColor = getBubbleBorderColour(\n      chart.data.datasets[0].data,\n      selected,\n    );\n\n    // remove hover annotations\n    if (\n      chart.config.options.plugins.annotation &&\n      chart.config.options.plugins.annotation.annotations.line2\n    ) {\n      delete chart.config.options.plugins.annotation.annotations.line2;\n      delete chart.config.options.plugins.annotation.annotations.line3;\n    }\n\n    chart.update();\n  }\n};\n","export const getTitleFontSize = () => {\n  if (window.innerWidth > 1280) {\n    return 36;\n  }\n  if (window.innerWidth > 720) {\n    return 30;\n  }\n  if (window.innerWidth > 480) {\n    return 24;\n  }\n  return 20;\n};\n\nexport const getAxisFontSize = () => {\n  if (window.innerWidth > 1280) {\n    return 28;\n  }\n  if (window.innerWidth > 720) {\n    return 24;\n  }\n  if (window.innerWidth > 480) {\n    return 16;\n  }\n  return 12;\n};\n\nexport const getDatalabelFontSize = () => {\n  if (window.innerWidth > 1280) {\n    return 20;\n  }\n  if (window.innerWidth > 720) {\n    return 16;\n  }\n  return 12;\n};\n","import { getAxisFontSize } from \"./getFontSize\";\nimport { getPrintableValue } from \"./getPrintableValue\";\n\nexport const getAxis = (category, chartData) => {\n  switch (category) {\n    case \"gdpPercap\":\n      return {\n        type: \"logarithmic\",\n        offset: false,\n        min: 100,\n        max: 120000,\n        title: {\n          display: true,\n          text: \"Income per person (GDP/capita)\",\n          font: {\n            size: getAxisFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        ticks: {\n          font: {\n            family: \"'Work Sans', sans-serif\",\n          },\n          autoSkip: false,\n          includeBounds: false,\n          backdropPadding: 0,\n        },\n      };\n    case \"year\":\n      return {\n        type: \"category\",\n        labels: chartData.allYears.map((d) => d).concat(\"\", \"\", \"Today\"),\n        title: {\n          display: true,\n          text: \"Time\",\n          font: {\n            size: getAxisFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        ticks: {\n          font: {\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n      };\n    case \"fertilityRate\":\n      return {\n        type: \"linear\",\n        min: 0,\n        max: 9,\n        title: {\n          display: true,\n          text: \"Babies per Woman\",\n          font: {\n            size: getAxisFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        ticks: {\n          font: {\n            family: \"'Work Sans', sans-serif\",\n          },\n          autoSkip: false,\n          includeBounds: false,\n          backdropPadding: 0,\n        },\n      };\n    case \"co2\":\n      return {\n        type: \"logarithmic\",\n        offset: false,\n        min: 0.001,\n        max: 200,\n        title: {\n          display: true,\n          text: \"CO2 Emissions per Person\",\n          font: {\n            size: getAxisFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        ticks: {\n          font: {\n            family: \"'Work Sans', sans-serif\",\n          },\n          callback: (v, i, ticks) => {\n            if (ticks[i].major) {\n              return ticks[i].value;\n            }\n            return null;\n          },\n          autoSkip: true,\n          includeBounds: false,\n          backdropPadding: 0,\n        },\n      };\n    case \"population\":\n      return {\n        type: \"linear\",\n        min: 0,\n        max: 1750000000,\n        title: {\n          display: true,\n          text: \"Population\",\n          font: {\n            size: getAxisFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        ticks: {\n          font: {\n            family: \"'Work Sans', sans-serif\",\n          },\n          callback: (v, i, ticks) => getPrintableValue(ticks[i].value),\n          autoSkip: false,\n          includeBounds: false,\n          backdropPadding: 0,\n        },\n      };\n    case \"lifeExpectancy\":\n      return {\n        type: \"linear\",\n        min: 20,\n        max: 90,\n        title: {\n          display: true,\n          text: \"Life expectancy (years)\",\n          font: {\n            size: getAxisFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        ticks: {\n          font: {\n            family: \"'Work Sans', sans-serif\",\n          },\n          autoSkip: false,\n          includeBounds: false,\n          backdropPadding: 0,\n        },\n      };\n    default:\n      return {};\n  }\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useChartData = (allData, defaultSelected = []) => {\n  const [data, setData] = useState(allData);\n  const [allYears, setAllYears] = useState([]);\n  const [selected, setSelected] = useState({});\n\n  // allows initialData to be updated once loaded\n  useEffect(() => {\n    setData(allData);\n  }, [allData]);\n\n  // set data properties\n  useEffect(() => {\n    if (allData) {\n      setAllYears([...new Set(allData.map((d) => d.year))]);\n    }\n  }, [allData]);\n\n  // initialize selected data\n  const initializeData = (newData) => {\n    setData(newData);\n    setSelected(\n      [...new Set(newData.map((d) => d.label))].reduce((o, a) => {\n        if (defaultSelected.indexOf(a) === -1) {\n          o[a] = false;\n        } else {\n          o[a] = true;\n        }\n\n        return o;\n      }, {}),\n    );\n  };\n\n  // toggle a selected country\n  const toggleSelected = (country) => {\n    setSelected({ ...selected, [country]: !selected[country] });\n  };\n\n  // filter data\n  const filterData = (func) => {\n    if (allData) {\n      const filteredData = allData.filter(func);\n      setData(filteredData);\n    }\n  };\n\n  return {\n    data,\n    allYears,\n    selected,\n    toggleSelected,\n    filterData,\n    initializeData,\n  };\n};\n","import { useLayoutEffect, useState } from \"react\";\n\nexport const useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  // respond to changes in window width\n  useLayoutEffect(() => {\n    const updateWidth = () => {\n      setWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n\n    // cleanup\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  return width;\n};\n","import React from \"react\";\n\nexport const AxisDropdown = ({ choice, handleChange, label }) => (\n  <div className=\"select-container\">\n    <p className=\"select-label\">{label}</p>\n    <select defaultValue={choice} onChange={handleChange}>\n      <option value=\"fertilityRate\">Babies per Woman</option>\n      <option value=\"co2\">CO2 Emissions per Person</option>\n      <option value=\"gdpPercap\">Income per Person</option>\n      <option value=\"lifeExpectancy\">Life Expectancy</option>\n      <option value=\"population\">Population</option>\n      <option value=\"year\">Time</option>\n    </select>\n  </div>\n);\n","import React from \"react\";\n\nexport const BubbleSizeDropdown = ({ sizeValue, setSizeValue, hoverValue }) => (\n  <span className=\"select-container\">\n    <p className=\"select-label\">bubble size</p>\n    <select\n      defaultValue={sizeValue}\n      onChange={(e) => setSizeValue(e.target.value)}\n    >\n      <option value=\"population\">\n        {sizeValue === \"population\" && hoverValue ? hoverValue : \"Population\"}\n      </option>\n      <option value=\"fertilityRate\">\n        {sizeValue === \"fertilityRate\" && hoverValue\n          ? hoverValue\n          : \"Babies per Woman\"}\n      </option>\n      <option value=\"co2\">\n        {sizeValue === \"co2\" && hoverValue\n          ? hoverValue\n          : \"CO2 Emissions per Person\"}\n      </option>\n    </select>\n  </span>\n);\n","import React from \"react\";\nimport styles from \"./ChartAndSliderContainer.module.scss\";\n\nexport const ChartAndSliderContainer = ({ children }) => (\n  <section className={`df df-fc df-ai-c ${styles[\"chart-container\"]}`}>\n    {children}\n  </section>\n);\n","import React from \"react\";\nimport styles from \"./ChartPageLayout.module.scss\";\n\nexport const ChartPageLayout = ({ children }) => (\n  <main className={`container df df-ai-fs ${styles[\"chart-layout\"]}`}>\n    {children}\n  </main>\n);\n","import React, { useState } from \"react\";\nimport styles from \"./ChartSidebar.module.scss\";\n\nexport const ChartSidebar = ({ selected, toggleSelected, children }) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  return (\n    <section className={`df df-fc df-ai-c ${styles.sidebar}`}>\n      <img\n        src={`${process.env.PUBLIC_URL}/world_colour_map.svg`}\n        alt=\"Colour legend map for plot points\"\n        className={styles.map}\n      />\n      <input\n        type=\"text\"\n        value={searchValue}\n        onChange={({ target }) => setSearchValue(target.value)}\n        className={styles.search}\n        placeholder=\"Search\"\n      />\n\n      <article className={`df df-fc df-ai-fs ${styles.select}`}>\n        {Object.entries(selected).filter((o) => o[1] === true).length > 0 ? (\n          <article\n            className={`df df-fc df-ai-fs ${styles[\"selected-countries\"]}`}\n          >\n            {/* list of selected countries */}\n\n            {Object.entries(selected)\n              .filter((o) => o[1] === true)\n              .map((o) => o[0])\n              .map((l) => (\n                <article className={styles[\"country-name\"]} key={l}>\n                  <input\n                    type=\"checkbox\"\n                    id={l}\n                    name={l}\n                    defaultChecked={selected[l]}\n                    onClick={() => toggleSelected(l)}\n                  />\n                  <label htmlFor={l}>{l}</label>\n                </article>\n              ))}\n          </article>\n        ) : null}\n\n        <article\n          className={`df df-fc df-ai-fs ${styles[\"unselected-countries\"]}`}\n        >\n          {/* list of unselected countries or countries matching search value */}\n\n          {searchValue === \"\"\n            ? Object.entries(selected)\n                .filter((o) => o[1] === false)\n                .map((o) => o[0])\n                .map((l) => (\n                  <article className={styles[\"country-name\"]} key={l}>\n                    <input\n                      type=\"checkbox\"\n                      id={l}\n                      name={l}\n                      defaultChecked={selected[l]}\n                      onClick={() => toggleSelected(l)}\n                    />\n                    <label htmlFor={l}>{l}</label>\n                  </article>\n                ))\n            : Object.entries(selected)\n                .filter((o) => o[1] === false)\n                .map((o) => o[0])\n                .filter(\n                  (n) => n.toLowerCase().search(searchValue.toLowerCase()) > -1,\n                )\n                .map((l) => (\n                  <article className={styles[\"country-name\"]} key={l}>\n                    <input\n                      type=\"checkbox\"\n                      id={l}\n                      name={l}\n                      defaultChecked={selected[l]}\n                      onClick={() => toggleSelected(l)}\n                    />\n                    <label htmlFor={l}>{l}</label>\n                  </article>\n                ))}\n        </article>\n      </article>\n      {children}\n    </section>\n  );\n};\n","import React from \"react\";\n\nexport const Loading = () => <h2>Loading...</h2>;\n","import React from \"react\";\nimport styles from \"./Slider.module.scss\";\n\nexport const Slider = ({ listData, min, max, value, handleChange }) => (\n  <>\n    <input\n      className={styles.slider}\n      type=\"range\"\n      min={min}\n      max={max}\n      value={value}\n      list=\"slider-data\"\n      onChange={handleChange}\n    />\n    <datalist id=\"slider-data\">\n      {listData.map((d) => (\n        <option key={d} value={d} aria-label={d} />\n      ))}\n    </datalist>\n  </>\n);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Bubble } from \"react-chartjs-2\";\nimport { bubbleChartHover } from \"../helpers/bubbleChartHover\";\nimport {\n  getBubbleBackgroundColour,\n  getBubbleBorderColour,\n} from \"../helpers/colours\";\nimport { getAxis } from \"../helpers/getAxis\";\nimport { getDatalabelFontSize, getTitleFontSize } from \"../helpers/getFontSize\";\nimport { useChartData } from \"../hooks/useChartData\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { AxisDropdown } from \"./AxisDropdown\";\nimport { BubbleSizeDropdown } from \"./BubbleSizeDropdown\";\nimport { ChartAndSliderContainer } from \"./ChartAndSliderContainer\";\nimport { ChartPageLayout } from \"./ChartPageLayout\";\nimport { ChartSidebar } from \"./ChartSidebar\";\nimport { Loading } from \"./Loading\";\nimport { Slider } from \"./Slider\";\n\nexport const BubbleChart = ({ allData }) => {\n  const chartData = useChartData(allData);\n  const width = useWindowWidth();\n\n  const [radiusCategory, setRadiusCategory] = useState(\"population\");\n  const [currentYear, setCurrentYear] = useState(2007);\n  const [hoverValue, setHoverValue] = useState(null);\n  const [xAxis, setXAxis] = useState(\"gdpPercap\");\n  const [yAxis, setYAxis] = useState(\"lifeExpectancy\");\n  const [useConstant, setUseConstant] = useState(false);\n\n  const chartRef = useRef(null);\n\n  // define how bubble radii are scaled\n  const radiusScale = {\n    population: (v) => (1 / 300) * Math.sqrt(v / Math.PI),\n    fertilityRate: (v) => 25 * Math.sqrt(v / Math.PI),\n    co2: (v) => 15 * Math.sqrt(v / Math.PI),\n  };\n\n    // use a constant radius size\n  const constantRadius = {\n    population: () => 15,\n    fertilityRate: () => 15,\n    co2: () => 15,\n  };\n\n  // update chartData once loaded\n  useEffect(() => {\n    if (allData) {\n      chartData.initializeData(allData.filter((d) => d.year === currentYear));\n    }\n  }, [allData]);\n\n  // filter chartData when currentYear changes\n  useEffect(() => {\n    chartData.filterData((d) => d.year === currentYear);\n  }, [currentYear]);\n\n  // update chart to resize font on window resize\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.update();\n    }\n  }, [width]);\n\n  // toggle constant radius state\n  const toggleConstantRadius = (e) => {\n    e.preventDefault();\n    setUseConstant(!useConstant);\n  };\n\n  if (chartData.data && chartData.selected) {\n    // data available to render\n\n    const bubbleChartData = {\n      datasets: [\n        {\n          data: chartData.data.map((d) => ({\n            x: d[xAxis],\n            y: d[yAxis],\n            label: d.label,\n            r: useConstant\n              ? constantRadius[radiusCategory](d[radiusCategory])\n              : radiusScale[radiusCategory](d[radiusCategory]),\n            continent: d.continent,\n          })),\n          backgroundColor: getBubbleBackgroundColour(\n            chartData.data,\n            chartData.selected,\n          ),\n          borderWidth: 1,\n          borderColor: getBubbleBorderColour(\n            chartData.data,\n            chartData.selected,\n          ),\n          clip: 0,\n        },\n      ],\n    };\n\n    const bubbleChartOptions = {\n      aspectRatio: 1,\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 0,\n      },\n      onHover: (e, data, chart) =>\n        bubbleChartHover(\n          e,\n          data,\n          chart,\n          radiusCategory,\n          chartData.selected,\n          setHoverValue,\n        ),\n      onClick: (e, data, chart) => {\n        if (data.length) {\n          chartData.toggleSelected(\n            chart.data.datasets[0].data[data[0].index].label,\n          );\n        }\n      },\n      scales: {\n        x: { ...getAxis(xAxis, chartData) },\n        y: {\n          ...getAxis(yAxis, chartData),\n          ...(yAxis === \"year\" && { reverse: true }), // categorical y axis needs to be reversed\n        },\n      },\n      plugins: {\n        tooltip: {\n          filter: (chart) => {\n            // disable tooltip if data point is selected\n            const { label } = chart.dataset.data[chart.dataIndex];\n            return !chartData.selected[label];\n          },\n          callbacks: {\n            label: (ctx) => ctx.dataset.data[ctx.dataIndex].label,\n          },\n          bodyFont: {\n            family: \"'Work Sans', sans-serif\",\n            size: getDatalabelFontSize(),\n          },\n          displayColors: false,\n        },\n        legend: {\n          display: false,\n        },\n        title: {\n          display: true,\n          text: currentYear,\n          font: {\n            size: getTitleFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n        },\n        datalabels: {\n          formatter: (value) => {\n            // apply labels to selected data points\n            const { label } = value;\n            if (chartData.selected[label]) {\n              return value.label;\n            }\n            return null;\n          },\n          color: \"rgb(255, 255, 255)\",\n          align: \"top\",\n          font: {\n            size: getDatalabelFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n          anchor: \"end\",\n          offset: 4,\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n          borderColor: \"rgb(128, 128, 128)\",\n          borderRadius: 2,\n          borderWidth: 1,\n          clamp: true,\n        },\n        ...(xAxis === yAxis && {\n          // draw a line on the diagonal if x and y axes are the same\n          annotation: {\n            annotations: {\n              line1: {\n                type: \"line\",\n                xMin: (chart) => chart.chart.scales.x.min,\n                xMax: (chart) => chart.chart.scales.x.max,\n                yMin: (chart) => chart.chart.scales.y.min,\n                yMax: (chart) => chart.chart.scales.y.max,\n                borderColor: \"rgb((255, 99, 132)\",\n                borderWidth: 2,\n                borderDash: [4],\n                drawTime: \"beforeDatasetsDraw\",\n              },\n            },\n          },\n        }),\n      },\n    };\n\n    return (\n      <ChartPageLayout>\n        <ChartAndSliderContainer>\n          <Bubble\n            data={bubbleChartData}\n            options={bubbleChartOptions}\n            ref={chartRef}\n            height={300}\n            width={300}\n          />\n          <button type=\"submit\" onClick={toggleConstantRadius}>\n            {\n              useConstant ? \"use value sizes\" : \"use constant sizes\"\n            }\n          </button>\n          <Slider\n            listData={chartData.allYears}\n            min=\"0\"\n            max={chartData.allYears.length - 1}\n            value={chartData.allYears.indexOf(currentYear)}\n            handleChange={({ target }) =>\n              setCurrentYear(chartData.allYears[target.value])\n            }\n          />\n        </ChartAndSliderContainer>\n        <ChartSidebar\n          selected={chartData.selected}\n          toggleSelected={chartData.toggleSelected}\n        >\n          <BubbleSizeDropdown\n            sizeValue={radiusCategory}\n            setSizeValue={setRadiusCategory}\n            hoverValue={hoverValue}\n          />\n          <AxisDropdown\n            choice={xAxis}\n            handleChange={(e) => setXAxis(e.target.value)}\n            label=\"x-axis\"\n          />\n          <AxisDropdown\n            choice={yAxis}\n            handleChange={(e) => setYAxis(e.target.value)}\n            label=\"y-axis\"\n          />\n        </ChartSidebar>\n      </ChartPageLayout>\n    );\n  }\n\n  return <Loading />;\n};\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nexport const Header = () => {\n  const location = useLocation();\n\n  return (\n    <header className={`container df df-ai-c df-jc-c ${styles.header}`}>\n      <Link to={`${process.env.PUBLIC_URL}/`}>\n        <h1 className={styles.logo}>Gapminder</h1>\n      </Link>\n\n      <nav className=\"df\">\n        <Link\n          to={`${process.env.PUBLIC_URL}/`}\n          className={`${styles[\"nav-link\"]} ${\n            location.pathname === `${process.env.PUBLIC_URL}/` ? styles.current : null\n          }`}\n        >\n          Home\n        </Link>\n        <Link\n          to={`${process.env.PUBLIC_URL}/bubble`}\n          className={`${styles[\"nav-link\"]} ${\n            location.pathname === `${process.env.PUBLIC_URL}/bubble` ? styles.current : null\n          }`}\n        >\n          Bubble\n        </Link>\n        <Link\n          to={`${process.env.PUBLIC_URL}/line`}\n          className={`${styles[\"nav-link\"]} ${\n            location.pathname === `${process.env.PUBLIC_URL}/line` ? styles.current : null\n          }`}\n        >\n          Line\n        </Link>\n      </nav>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nexport const Home = () => (\n  <main className=\"container\">\n    <h2>Gapminder Data Visualization</h2>\n\n    <article className={`df df-fc df-ai-c df-jc-c ${styles.text}`}>\n      <p>\n        <a\n          href=\"https://www.gapminder.org/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gapminder\n        </a>{\" \"}\n        is a Swedish organization that fights ignorance and promotes a better\n        understanding of the world by making data available and accessible.\n        <br />\n        <br />\n        Explore the relationship between GDP per capita, life expectancy and\n        other attributes with a Bubble Chart <Link to={`${process.env.PUBLIC_URL}/bubble`}>here</Link>.\n        <br />\n        <br />\n        Explore how GDP per capita changes over time in different countries here\n        with a Line Chart <Link to={`${process.env.PUBLIC_URL}/line`}>here</Link>.\n        <br />\n      </p>\n    </article>\n  </main>\n);\n","export const lineChartHover = (e, data, chart) => {\n  if (data.length) {\n    // fade non-hovered datalabel backgrounds\n    chart.config.options.plugins.datalabels.backgroundColor = (d) =>\n      d.datasetIndex === data[0].datasetIndex\n        ? \"rgba(0, 0, 0, 0.8)\"\n        : \"rgba(0, 0, 0, 0.1)\";\n\n    chart.config.options.plugins.datalabels.color = (d) =>\n      d.datasetIndex === data[0].datasetIndex\n        ? \"rgba(255, 255, 255, 1)\"\n        : \"rgba(255, 255, 255, 0.1)\";\n\n    // fade colour of non-hovered lines/points\n    chart.data.datasets = chart.data.datasets.map((d, i) => {\n      if (i === data[0].datasetIndex) {\n        return d;\n      }\n      return {\n        ...d,\n        borderColor: d.borderColor.replace(/[0.]?1\\)/, \"0.1)\"),\n        pointBackgroundColor: d.pointBackgroundColor.replace(\n          /[0.]?1\\)/,\n          \"0.1)\",\n        ),\n        pointBorderColor: \"rgba(128, 128, 128, 0.1)\",\n      };\n    });\n\n    chart.update();\n  } else {\n    // darken datalabel background colour\n    chart.config.options.plugins.datalabels.backgroundColor = () =>\n      \"rgba(0, 0, 0, 0.8)\";\n\n    chart.config.options.plugins.datalabels.color = () =>\n      \"rgba(255, 255, 255, 1)\";\n\n    // darken lines/points\n    chart.data.datasets = chart.data.datasets.map((d) => ({\n      ...d,\n      borderColor: d.borderColor.replace(/0.1\\)/, \"1)\"),\n      pointBackgroundColor: d.pointBackgroundColor.replace(/0.1\\)/, \"1)\"),\n      pointBorderColor: \"rgb(0, 0, 0)\",\n    }));\n\n    chart.update();\n  }\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { getColour } from \"../helpers/colours\";\nimport {\n  getAxisFontSize,\n  getDatalabelFontSize,\n  getTitleFontSize,\n} from \"../helpers/getFontSize\";\nimport { lineChartHover } from \"../helpers/lineChartHover\";\nimport { useChartData } from \"../hooks/useChartData\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { ChartAndSliderContainer } from \"./ChartAndSliderContainer\";\nimport { ChartPageLayout } from \"./ChartPageLayout\";\nimport { ChartSidebar } from \"./ChartSidebar\";\nimport { Loading } from \"./Loading\";\nimport { Slider } from \"./Slider\";\n\nexport const LineChart = ({ allData }) => {\n  const chartData = useChartData(allData, [\"Canada\", \"Indonesia\", \"Nigeria\"]);\n  const width = useWindowWidth();\n\n  const [maxYear, setMaxYear] = useState(2007);\n\n  const chartRef = useRef(null);\n\n  // update chartData once loaded\n  useEffect(() => {\n    if (allData) {\n      chartData.initializeData(allData.filter((d) => d.year <= maxYear));\n    }\n  }, [allData]);\n\n  // filter chartData when maxYear changes\n  useEffect(() => {\n    chartData.filterData((d) => d.year <= maxYear);\n  }, [maxYear]);\n\n  // update chart to resize font on window resize\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.update();\n    }\n  }, [width]);\n\n  if (chartData.data && chartData.selected) {\n    // data available to render\n\n    const lineChartData = {\n      labels: chartData.allYears,\n      datasets: Object.entries(chartData.selected)\n        .filter((o) => o[1] === true)\n        .map((o) => o[0])\n        .map((c) => chartData.data.filter((d) => d.label === c))\n        .filter((c) => c.length > 0)\n        .map((c) => ({\n          label: c[0].label,\n          data: c.map((p) => ({ x: p.year, y: p.gdpPercap })),\n          borderColor: getColour(c[0].continent),\n          borderWidth: 5,\n          pointBorderWidth: 3,\n          pointBackgroundColor: getColour(c[0].continent),\n          pointBorderColor: \"rgb(0, 0, 0)\",\n          pointRadius: c.map((p) => (p.year === maxYear ? 8 : 0)),\n          pointHoverRadius: c.map((p) => (p.year === maxYear ? 8 : 0)),\n          pointHoverBorderWidth: 3,\n        })),\n    };\n\n    const lineChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      aspectRatio: 1,\n      layout: {\n        padding: {\n          top: getTitleFontSize() * 2,\n          right: 60,\n        },\n      },\n      animation: {\n        duration: 0,\n      },\n      onHover: lineChartHover,\n      scales: {\n        x: {\n          type: \"category\",\n          labels: chartData.allYears.map((d) => d).concat(\"\", \"\", \"Today\"),\n          title: {\n            display: true,\n            text: \"Time\",\n            font: {\n              size: getAxisFontSize(),\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n          ticks: {\n            font: {\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n        },\n        y: {\n          type: \"logarithmic\",\n          min: 0,\n          max: 80000,\n          title: {\n            display: true,\n            text: \"Income per person (GDP/capita)\",\n            font: {\n              size: getAxisFontSize(),\n              family: \"'Work Sans', sans-serif\",\n            },\n            align: \"center\",\n          },\n          ticks: {\n            font: {\n              family: \"'Work Sans', sans-serif\",\n            },\n          },\n        },\n      },\n      plugins: {\n        tooltip: {\n          enabled: false,\n        },\n        legend: {\n          display: false,\n        },\n        annotation: {\n          annotations: {\n            line1: {\n              type: \"line\",\n              mode: \"vertical\",\n              drawTime: \"beforeDraw\",\n              xMin: maxYear,\n              xMax: maxYear,\n              borderColor: \"rgb(128, 128, 128)\",\n              borderWidth: 1,\n              borderDash: [3],\n            },\n          },\n        },\n        datalabels: {\n          formatter: (value, context) => {\n            if (context.dataIndex === context.dataset.data.length - 1) {\n              const { label } = context.dataset;\n              const labelSplit = label.split(\" \");\n              if (label.split(\" \").length > 2) {\n                let wrappedLabel = \"\";\n                for (let i = 0; i < labelSplit.length; i += 2) {\n                  if (labelSplit[i + 1]) {\n                    wrappedLabel += `${labelSplit[i]} ${labelSplit[i + 1]}`;\n                  } else {\n                    wrappedLabel += `${labelSplit[i]}`;\n                  }\n                  if (i < labelSplit.length - 2) {\n                    wrappedLabel += \"\\n\";\n                  }\n                }\n\n                return wrappedLabel;\n              }\n              return labelSplit.join(\" \");\n            }\n            return null;\n          },\n          color: \"white\",\n          align: \"right\",\n          font: {\n            size: getDatalabelFontSize(),\n            family: \"'Work Sans', sans-serif\",\n          },\n          offset: 14,\n          backgroundColor: () => \"rgba(0, 0, 0, 0.8)\",\n          borderRadius: 2,\n          borderWidth: 1,\n          clamp: true,\n        },\n      },\n    };\n\n    return (\n      <ChartPageLayout>\n        <ChartAndSliderContainer>\n          <Line\n            data={lineChartData}\n            options={lineChartOptions}\n            height={300}\n            width={300}\n          />\n          <Slider\n            listData={chartData.allYears}\n            min=\"0\"\n            max={chartData.allYears.length - 1}\n            value={chartData.allYears.indexOf(maxYear)}\n            handleChange={({ target }) =>\n              setMaxYear(chartData.allYears[target.value])\n            }\n          />\n        </ChartAndSliderContainer>\n        <ChartSidebar\n          selected={chartData.selected}\n          toggleSelected={chartData.toggleSelected}\n        />\n      </ChartPageLayout>\n    );\n  }\n\n  return <Loading />;\n};\n","export default __webpack_public_path__ + \"static/media/gapminder_clean.ab8b93e9.csv\";","export const getContinent = (continent) => {\n  switch (continent) {\n    case \"Oceania\":\n      return \"Asia\";\n    case \"\":\n      return \"Unknown\";\n    default:\n      return continent;\n  }\n};\n","import { Chart } from \"chart.js\";\nimport annotationPlugin from \"chartjs-plugin-annotation\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport Papa from \"papaparse\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BubbleChart } from \"./components/BubbleChart\";\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./components/Home\";\nimport { LineChart } from \"./components/LineChart\";\nimport gapminder from \"./data/gapminder_clean.csv\";\nimport { getContinent } from \"./helpers/getContinent\";\n\n// register Chart.js plugins globally\nChart.register(annotationPlugin);\nChart.register(ChartDataLabels);\n\nfunction App() {\n  const [allData, setAllData] = useState(null);\n\n  useEffect(() => {\n    Papa.parse(gapminder, {\n      download: true,\n      header: true,\n      complete: (results) => {\n        const filtered = results.data\n          .filter((d) => !Number.isNaN(Number(d.year)))\n          .map((res) => ({\n            label: res.countryName,\n            gdpPercap: res.gdpPercap,\n            lifeExpectancy: res.lifeExpectancy,\n            population: res.pop,\n            fertilityRate: res.fertilityRate,\n            co2: res.co2,\n            continent: getContinent(res.continent),\n            year: +res.year,\n          }))\n          .filter((d) => d.continent !== \"Unknown\")\n          .filter((o) => Object.values(o).indexOf(\"\") === -1);\n\n        setAllData(filtered);\n      },\n    });\n  }, []);\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/bubble`}>\n          <BubbleChart allData={allData} />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/line`}>\n          <LineChart allData={allData} />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/`}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"ChartSidebar_sidebar__33mph\",\"select\":\"ChartSidebar_select__HDUmD\",\"map\":\"ChartSidebar_map__3YK4v\",\"search\":\"ChartSidebar_search__FfVKM\",\"selected-countries\":\"ChartSidebar_selected-countries__2HJ63\",\"unselected-countries\":\"ChartSidebar_unselected-countries__GVGoy\",\"country-name\":\"ChartSidebar_country-name__20cV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2XAj3\",\"nav-link\":\"Header_nav-link__2_Uhp\",\"current\":\"Header_current__2i1-b\",\"logo\":\"Header_logo__2XG30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-container\":\"ChartAndSliderContainer_chart-container__2vDfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-layout\":\"ChartPageLayout_chart-layout__Oev08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"Slider_slider__oktDX\",\"sliderfocus\":\"Slider_sliderfocus__Q-bHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Home_text__1ZAGp\"};"],"sourceRoot":""}